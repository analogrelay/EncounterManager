//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Encounters
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.Encounters, global::LightSwitchApplication.Encounters.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private Encounters() : base("LightSwitchApplication:Encounters")
        {
            global::LightSwitchApplication.Encounters.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static Encounters CreateInstance()
        {
            return new global::LightSwitchApplication.Encounters(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounters_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounters_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounters_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounters_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounters_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounters_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounters_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Encounters1_SelectionChanged();

        partial void Encounters1_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounters1_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Encounters1 visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Encounter> Encounters1
        {
            get
            {
                return global::LightSwitchApplication.Encounters.DetailsClass.GetValue(this, global::LightSwitchApplication.Encounters.DetailsClass.PropertySetProperties.Encounters1);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounters1_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Encounters, global::LightSwitchApplication.Encounters.DetailsClass, global::LightSwitchApplication.Encounters.DetailsClass.PropertySet, global::LightSwitchApplication.Encounters.DetailsClass.CommandSet, global::LightSwitchApplication.Encounters.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.Encounters.DetailsClass.PropertySetProperties.Encounters1;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Encounters, global::LightSwitchApplication.Encounters.DetailsClass>.Entry
                __EncountersEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Encounters, global::LightSwitchApplication.Encounters.DetailsClass>.Entry(
                    global::LightSwitchApplication.Encounters.DetailsClass.__Encounters_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.Encounters.DetailsClass.__Encounters_InvokeSavingEvent,
                    global::LightSwitchApplication.Encounters.DetailsClass.__Encounters_InvokeSavedEvent,
                    global::LightSwitchApplication.Encounters.DetailsClass.__Encounters_InvokeClosingEvent,
                    global::LightSwitchApplication.Encounters.DetailsClass.__Encounters_InvokeCreated,
                    global::LightSwitchApplication.Encounters.DetailsClass.__Encounters_InvokeActivated,
                    global::LightSwitchApplication.Encounters.DetailsClass.__Encounters_InvokeSaveErrorEvent);
            private static void __Encounters_InvokeInitializeDataWorkspace(global::LightSwitchApplication.Encounters s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.Encounters_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __Encounters_InvokeSavingEvent(global::LightSwitchApplication.Encounters s)
            {
                bool handled = false;
                s.Encounters_Saving(ref handled);
                return handled;
            }
            private static void __Encounters_InvokeSavedEvent(global::LightSwitchApplication.Encounters s)
            {
                s.Encounters_Saved();
            }
            private static bool __Encounters_InvokeClosingEvent(global::LightSwitchApplication.Encounters s)
            {
                bool cancel = false;
                s.Encounters_Closing(ref cancel);
                return cancel;
            }
            private static void __Encounters_InvokeCreated(global::LightSwitchApplication.Encounters s)
            {
                s.Encounters_Created();
            }
            private static void __Encounters_InvokeActivated(global::LightSwitchApplication.Encounters s)
            {
                s.Encounters_Activated();
            }
            private static bool __Encounters_InvokeSaveErrorEvent(global::LightSwitchApplication.Encounters s, global::System.Exception ex)
            {
                bool handled = false;
                s.Encounters_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.Encounters.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.Encounters.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.Encounters.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Encounters1Query()
            {
                return this.Screen.DataWorkspace.ApplicationData.Encounters;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Encounters, global::LightSwitchApplication.Encounters.DetailsClass, global::LightSwitchApplication.Encounter>.Data _Encounters1;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.Encounters, global::LightSwitchApplication.Encounters.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Encounters, global::LightSwitchApplication.Encounters.DetailsClass, global::LightSwitchApplication.Encounter> Encounters1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Encounters, global::LightSwitchApplication.Encounters.DetailsClass, global::LightSwitchApplication.Encounter>)base.GetItem(global::LightSwitchApplication.Encounters.DetailsClass.PropertySetProperties.Encounters1);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.Encounters, global::LightSwitchApplication.Encounters.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.Encounters, global::LightSwitchApplication.Encounters.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Encounters, global::LightSwitchApplication.Encounters.DetailsClass, global::LightSwitchApplication.Encounter>.Entry
                    Encounters1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Encounters, global::LightSwitchApplication.Encounters.DetailsClass, global::LightSwitchApplication.Encounter>.Entry(
                        "Encounters1",
                        global::LightSwitchApplication.Encounters.DetailsClass.PropertySetProperties._Encounters1_Stub,
                        global::LightSwitchApplication.Encounters.DetailsClass.PropertySetProperties._Encounters1_Validate,
                        global::LightSwitchApplication.Encounters.DetailsClass.PropertySetProperties._Encounters1_CreateQuery,
                        global::LightSwitchApplication.Encounters.DetailsClass.PropertySetProperties._Encounters1_SelectionChanged,
                        global::LightSwitchApplication.Encounters.DetailsClass.PropertySetProperties._Encounters1_OnCollectionChanged,
                        global::LightSwitchApplication.Encounters.DetailsClass.PropertySetProperties._Encounters1_OnLoaded);
                private static void _Encounters1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Encounters.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Encounters, global::LightSwitchApplication.Encounters.DetailsClass, global::LightSwitchApplication.Encounter>.Data> c, global::LightSwitchApplication.Encounters.DetailsClass d, object sf)
                {
                    c(d, ref d._Encounters1, sf);
                }
                private static void _Encounters1_Validate(global::LightSwitchApplication.Encounters s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Encounters1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Encounters1_CreateQuery(global::LightSwitchApplication.Encounters.DetailsClass d, object[] args)
                {
                    return d.Encounters1Query();
                }
                private static void _Encounters1_SelectionChanged(global::LightSwitchApplication.Encounters s)
                {
                    s.Encounters1_SelectionChanged();
                }
                private static void _Encounters1_OnCollectionChanged(global::LightSwitchApplication.Encounters s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Encounters1_Changed(e);
                }
                private static void _Encounters1_OnLoaded(global::LightSwitchApplication.Encounters s, bool succeeded)
                {
                    s.Encounters1_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EncounterDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EncounterDetail(int EncounterId) : base("LightSwitchApplication:EncounterDetail")
        {
                this.EncounterId = EncounterId;
            global::LightSwitchApplication.EncounterDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EncounterDetail CreateInstance(int EncounterId)
        {
            return new global::LightSwitchApplication.EncounterDetail(
                        EncounterId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EncounterDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EncounterDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EncounterDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EncounterDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EncounterDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EncounterDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EncounterDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Encounter_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounter_Loaded(bool succeeded);

        partial void EncounterId_Changed();

        partial void Creatures_SelectionChanged();

        partial void Creatures_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Creatures_Loaded(bool succeeded);

        partial void Powers_SelectionChanged();

        partial void Powers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Powers_Loaded(bool succeeded);

        partial void Statuses_SelectionChanged();

        partial void Statuses_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statuses_Loaded(bool succeeded);

        partial void TakeDamageAdd_Changed();

        partial void TakeDamageAmount_Changed();

        partial void TakeDamageLabel_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Encounter Encounter
        {
            get
            {
                return global::LightSwitchApplication.EncounterDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties.Encounter);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int EncounterId
        {
            get 
            {
                return global::LightSwitchApplication.EncounterDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties.EncounterId);
            }
            set
            {
                global::LightSwitchApplication.EncounterDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties.EncounterId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EncounterId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Creatures visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Creature> Creatures
        {
            get
            {
                return global::LightSwitchApplication.EncounterDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties.Creatures);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Creatures_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Powers visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Power> Powers
        {
            get
            {
                return global::LightSwitchApplication.EncounterDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties.Powers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Powers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Statuses visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Status> Statuses
        {
            get
            {
                return global::LightSwitchApplication.EncounterDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties.Statuses);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statuses_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool TakeDamageAdd
        {
            get 
            {
                return global::LightSwitchApplication.EncounterDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties.TakeDamageAdd);
            }
            set
            {
                global::LightSwitchApplication.EncounterDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties.TakeDamageAdd, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TakeDamageAdd_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int TakeDamageAmount
        {
            get 
            {
                return global::LightSwitchApplication.EncounterDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties.TakeDamageAmount);
            }
            set
            {
                global::LightSwitchApplication.EncounterDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties.TakeDamageAmount, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TakeDamageAmount_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TakeDamageLabel
        {
            get 
            {
                return global::LightSwitchApplication.EncounterDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties.TakeDamageLabel);
            }
            set
            {
                global::LightSwitchApplication.EncounterDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties.TakeDamageLabel, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TakeDamageLabel_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the Clone screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Clone()
        {
            this.Details.Methods.Clone.CreateInvocation().Execute();
        }
        partial void Clone_CanExecute(ref bool result);
        partial void Clone_Execute();

        /// <summary>
        /// Calls the TakeDamage screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void TakeDamage()
        {
            this.Details.Methods.TakeDamage.CreateInvocation().Execute();
        }
        partial void TakeDamage_CanExecute(ref bool result);
        partial void TakeDamage_Execute();

        /// <summary>
        /// Calls the Heal screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Heal()
        {
            this.Details.Methods.Heal.CreateInvocation().Execute();
        }
        partial void Heal_CanExecute(ref bool result);
        partial void Heal_Execute();

        /// <summary>
        /// Calls the OkMethod screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OkMethod()
        {
            this.Details.Methods.OkMethod.CreateInvocation().Execute();
        }
        partial void OkMethod_CanExecute(ref bool result);
        partial void OkMethod_Execute();

        /// <summary>
        /// Calls the CancelMethod screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelMethod()
        {
            this.Details.Methods.CancelMethod.CreateInvocation().Execute();
        }
        partial void CancelMethod_CanExecute(ref bool result);
        partial void CancelMethod_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySet, global::LightSwitchApplication.EncounterDetail.DetailsClass.CommandSet, global::LightSwitchApplication.EncounterDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties.Encounter;
                var initializeCommandEntry = global::LightSwitchApplication.EncounterDetail.DetailsClass.CommandSetProperties.Clone;
                var initializeMethodEntry = global::LightSwitchApplication.EncounterDetail.DetailsClass.MethodSetProperties.Clone;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Entry
                __EncounterDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.EncounterDetail.DetailsClass.__EncounterDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EncounterDetail.DetailsClass.__EncounterDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.EncounterDetail.DetailsClass.__EncounterDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.EncounterDetail.DetailsClass.__EncounterDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.EncounterDetail.DetailsClass.__EncounterDetail_InvokeCreated,
                    global::LightSwitchApplication.EncounterDetail.DetailsClass.__EncounterDetail_InvokeActivated,
                    global::LightSwitchApplication.EncounterDetail.DetailsClass.__EncounterDetail_InvokeSaveErrorEvent);
            private static void __EncounterDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EncounterDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EncounterDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EncounterDetail_InvokeSavingEvent(global::LightSwitchApplication.EncounterDetail s)
            {
                bool handled = false;
                s.EncounterDetail_Saving(ref handled);
                return handled;
            }
            private static void __EncounterDetail_InvokeSavedEvent(global::LightSwitchApplication.EncounterDetail s)
            {
                s.EncounterDetail_Saved();
            }
            private static bool __EncounterDetail_InvokeClosingEvent(global::LightSwitchApplication.EncounterDetail s)
            {
                bool cancel = false;
                s.EncounterDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __EncounterDetail_InvokeCreated(global::LightSwitchApplication.EncounterDetail s)
            {
                s.EncounterDetail_Created();
            }
            private static void __EncounterDetail_InvokeActivated(global::LightSwitchApplication.EncounterDetail s)
            {
                s.EncounterDetail_Activated();
            }
            private static bool __EncounterDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.EncounterDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.EncounterDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EncounterDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EncounterDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable CreaturesQuery()
            {
                if (this.Screen.Encounter == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Creature> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Creature>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Encounter.Details.Properties.Creatures).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable PowersQuery()
            {
                if (this.Screen.Creatures.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Power> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Power>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Creatures.SelectedItem.Details.Properties.Powers).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable StatusesQuery()
            {
                if (this.Screen.Creatures.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Status> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Status>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Creatures.SelectedItem.Details.Properties.Statuses).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.Encounter>.Data _Encounter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, int>.Data _EncounterId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.Creature>.Data _Creatures;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.Power>.Data _Powers;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.Status>.Data _Statuses;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, bool>.Data _TakeDamageAdd;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, int>.Data _TakeDamageAmount;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, string>.Data _TakeDamageLabel;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Data _CloneCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Data _TakeDamageCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Data _HealCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Data _OkMethodCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Data _CancelMethodCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Data _CloneMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Data _TakeDamageMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Data _HealMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Data _OkMethodMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Data _CancelMethodMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.Encounter> Encounter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.Encounter>)base.GetItem(global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties.Encounter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, int> EncounterId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties.EncounterId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.Creature> Creatures
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.Creature>)base.GetItem(global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties.Creatures);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.Power> Powers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.Power>)base.GetItem(global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties.Powers);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.Status> Statuses
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.Status>)base.GetItem(global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties.Statuses);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, bool> TakeDamageAdd
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, bool>)base.GetItem(global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties.TakeDamageAdd);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, int> TakeDamageAmount
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties.TakeDamageAmount);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, string> TakeDamageLabel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties.TakeDamageLabel);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass> Clone
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EncounterDetail.DetailsClass.CommandSetProperties.Clone);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass> TakeDamage
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EncounterDetail.DetailsClass.CommandSetProperties.TakeDamage);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass> Heal
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EncounterDetail.DetailsClass.CommandSetProperties.Heal);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass> OkMethod
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EncounterDetail.DetailsClass.CommandSetProperties.OkMethod);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass> CancelMethod
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EncounterDetail.DetailsClass.CommandSetProperties.CancelMethod);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass> Clone
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EncounterDetail.DetailsClass.MethodSetProperties.Clone);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass> TakeDamage
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EncounterDetail.DetailsClass.MethodSetProperties.TakeDamage);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass> Heal
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EncounterDetail.DetailsClass.MethodSetProperties.Heal);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass> OkMethod
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EncounterDetail.DetailsClass.MethodSetProperties.OkMethod);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass> CancelMethod
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EncounterDetail.DetailsClass.MethodSetProperties.CancelMethod);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.Encounter>.Entry
                    Encounter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.Encounter>.Entry(
                        "Encounter",
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._Encounter_Stub,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._Encounter_Validate,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._Encounter_CreateQuery,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._Encounter_OnValueChanged,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._Encounter_OnLoaded);
                private static void _Encounter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EncounterDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.Encounter>.Data> c, global::LightSwitchApplication.EncounterDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Encounter, sf);
                }
                private static void _Encounter_Validate(global::LightSwitchApplication.EncounterDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Encounter_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Encounter_CreateQuery(global::LightSwitchApplication.EncounterDetail.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Encounter_OnValueChanged(global::LightSwitchApplication.EncounterDetail s)
                {
                    s.Encounter_Changed();
                }

                private static void _Encounter_OnLoaded(global::LightSwitchApplication.EncounterDetail s, bool succeeded)
                {
                    s.Encounter_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, int>.Entry
                    EncounterId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, int>.Entry(
                        "EncounterId",
                        false,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._EncounterId_Stub,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._EncounterId_Validate,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._EncounterId_OnValueChanged);
                private static void _EncounterId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EncounterDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.EncounterDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._EncounterId, sf);
                }
                private static void _EncounterId_Validate(global::LightSwitchApplication.EncounterDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EncounterId_Validate(r);
                }
                private static void _EncounterId_OnValueChanged(global::LightSwitchApplication.EncounterDetail s)
                {
                    s.EncounterId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.Creature>.Entry
                    Creatures = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.Creature>.Entry(
                        "Creatures",
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._Creatures_Stub,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._Creatures_Validate,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._Creatures_CreateQuery,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._Creatures_SelectionChanged,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._Creatures_OnCollectionChanged,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._Creatures_OnLoaded);
                private static void _Creatures_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EncounterDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.Creature>.Data> c, global::LightSwitchApplication.EncounterDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Creatures, sf);
                }
                private static void _Creatures_Validate(global::LightSwitchApplication.EncounterDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Creatures_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Creatures_CreateQuery(global::LightSwitchApplication.EncounterDetail.DetailsClass d, object[] args)
                {
                    return d.CreaturesQuery();
                }
                private static void _Creatures_SelectionChanged(global::LightSwitchApplication.EncounterDetail s)
                {
                    s.Creatures_SelectionChanged();
                }
                private static void _Creatures_OnCollectionChanged(global::LightSwitchApplication.EncounterDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Creatures_Changed(e);
                }
                private static void _Creatures_OnLoaded(global::LightSwitchApplication.EncounterDetail s, bool succeeded)
                {
                    s.Creatures_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.Power>.Entry
                    Powers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.Power>.Entry(
                        "Powers",
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._Powers_Stub,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._Powers_Validate,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._Powers_CreateQuery,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._Powers_SelectionChanged,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._Powers_OnCollectionChanged,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._Powers_OnLoaded);
                private static void _Powers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EncounterDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.Power>.Data> c, global::LightSwitchApplication.EncounterDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Powers, sf);
                }
                private static void _Powers_Validate(global::LightSwitchApplication.EncounterDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Powers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Powers_CreateQuery(global::LightSwitchApplication.EncounterDetail.DetailsClass d, object[] args)
                {
                    return d.PowersQuery();
                }
                private static void _Powers_SelectionChanged(global::LightSwitchApplication.EncounterDetail s)
                {
                    s.Powers_SelectionChanged();
                }
                private static void _Powers_OnCollectionChanged(global::LightSwitchApplication.EncounterDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Powers_Changed(e);
                }
                private static void _Powers_OnLoaded(global::LightSwitchApplication.EncounterDetail s, bool succeeded)
                {
                    s.Powers_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.Status>.Entry
                    Statuses = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.Status>.Entry(
                        "Statuses",
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._Statuses_Stub,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._Statuses_Validate,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._Statuses_CreateQuery,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._Statuses_SelectionChanged,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._Statuses_OnCollectionChanged,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._Statuses_OnLoaded);
                private static void _Statuses_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EncounterDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, global::LightSwitchApplication.Status>.Data> c, global::LightSwitchApplication.EncounterDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Statuses, sf);
                }
                private static void _Statuses_Validate(global::LightSwitchApplication.EncounterDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Statuses_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Statuses_CreateQuery(global::LightSwitchApplication.EncounterDetail.DetailsClass d, object[] args)
                {
                    return d.StatusesQuery();
                }
                private static void _Statuses_SelectionChanged(global::LightSwitchApplication.EncounterDetail s)
                {
                    s.Statuses_SelectionChanged();
                }
                private static void _Statuses_OnCollectionChanged(global::LightSwitchApplication.EncounterDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Statuses_Changed(e);
                }
                private static void _Statuses_OnLoaded(global::LightSwitchApplication.EncounterDetail s, bool succeeded)
                {
                    s.Statuses_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, bool>.Entry
                    TakeDamageAdd = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, bool>.Entry(
                        "TakeDamageAdd",
                        false,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._TakeDamageAdd_Stub,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._TakeDamageAdd_Validate,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._TakeDamageAdd_OnValueChanged);
                private static void _TakeDamageAdd_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EncounterDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, bool>.Data> c, global::LightSwitchApplication.EncounterDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._TakeDamageAdd, sf);
                }
                private static void _TakeDamageAdd_Validate(global::LightSwitchApplication.EncounterDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TakeDamageAdd_Validate(r);
                }
                private static void _TakeDamageAdd_OnValueChanged(global::LightSwitchApplication.EncounterDetail s)
                {
                    s.TakeDamageAdd_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, int>.Entry
                    TakeDamageAmount = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, int>.Entry(
                        "TakeDamageAmount",
                        false,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._TakeDamageAmount_Stub,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._TakeDamageAmount_Validate,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._TakeDamageAmount_OnValueChanged);
                private static void _TakeDamageAmount_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EncounterDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.EncounterDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._TakeDamageAmount, sf);
                }
                private static void _TakeDamageAmount_Validate(global::LightSwitchApplication.EncounterDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TakeDamageAmount_Validate(r);
                }
                private static void _TakeDamageAmount_OnValueChanged(global::LightSwitchApplication.EncounterDetail s)
                {
                    s.TakeDamageAmount_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, string>.Entry
                    TakeDamageLabel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, string>.Entry(
                        "TakeDamageLabel",
                        false,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._TakeDamageLabel_Stub,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._TakeDamageLabel_Validate,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.PropertySetProperties._TakeDamageLabel_OnValueChanged);
                private static void _TakeDamageLabel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EncounterDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.EncounterDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._TakeDamageLabel, sf);
                }
                private static void _TakeDamageLabel_Validate(global::LightSwitchApplication.EncounterDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TakeDamageLabel_Validate(r);
                }
                private static void _TakeDamageLabel_OnValueChanged(global::LightSwitchApplication.EncounterDetail s)
                {
                    s.TakeDamageLabel_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Entry
                    Clone = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Entry(
                        "Clone",
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.CommandSetProperties._Clone_Stub,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.CommandSetProperties._Clone_CreateExecutableObject);
                private static void _Clone_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EncounterDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EncounterDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._CloneCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Clone_CreateExecutableObject(global::LightSwitchApplication.EncounterDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EncounterDetail.DetailsClass)d).Methods.Clone.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Entry
                    TakeDamage = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Entry(
                        "TakeDamage",
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.CommandSetProperties._TakeDamage_Stub,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.CommandSetProperties._TakeDamage_CreateExecutableObject);
                private static void _TakeDamage_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EncounterDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EncounterDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._TakeDamageCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _TakeDamage_CreateExecutableObject(global::LightSwitchApplication.EncounterDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EncounterDetail.DetailsClass)d).Methods.TakeDamage.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Entry
                    Heal = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Entry(
                        "Heal",
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.CommandSetProperties._Heal_Stub,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.CommandSetProperties._Heal_CreateExecutableObject);
                private static void _Heal_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EncounterDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EncounterDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._HealCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Heal_CreateExecutableObject(global::LightSwitchApplication.EncounterDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EncounterDetail.DetailsClass)d).Methods.Heal.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Entry
                    OkMethod = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Entry(
                        "OkMethod",
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.CommandSetProperties._OkMethod_Stub,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.CommandSetProperties._OkMethod_CreateExecutableObject);
                private static void _OkMethod_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EncounterDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EncounterDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._OkMethodCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OkMethod_CreateExecutableObject(global::LightSwitchApplication.EncounterDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EncounterDetail.DetailsClass)d).Methods.OkMethod.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Entry
                    CancelMethod = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Entry(
                        "CancelMethod",
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.CommandSetProperties._CancelMethod_Stub,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.CommandSetProperties._CancelMethod_CreateExecutableObject);
                private static void _CancelMethod_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EncounterDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EncounterDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelMethodCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelMethod_CreateExecutableObject(global::LightSwitchApplication.EncounterDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EncounterDetail.DetailsClass)d).Methods.CancelMethod.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Entry
                    Clone = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Entry(
                        "Clone",
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.MethodSetProperties._Clone_Stub,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.MethodSetProperties._Clone_CanInvoke,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.MethodSetProperties._Clone_InvokeMethod);
                private static void _Clone_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EncounterDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EncounterDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._CloneMethod, sf);
                }
                private static global::System.Exception _Clone_CanInvoke(global::LightSwitchApplication.EncounterDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Clone_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Clone_InvokeMethod(global::LightSwitchApplication.EncounterDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Clone_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Entry
                    TakeDamage = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Entry(
                        "TakeDamage",
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.MethodSetProperties._TakeDamage_Stub,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.MethodSetProperties._TakeDamage_CanInvoke,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.MethodSetProperties._TakeDamage_InvokeMethod);
                private static void _TakeDamage_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EncounterDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EncounterDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._TakeDamageMethod, sf);
                }
                private static global::System.Exception _TakeDamage_CanInvoke(global::LightSwitchApplication.EncounterDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.TakeDamage_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _TakeDamage_InvokeMethod(global::LightSwitchApplication.EncounterDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.TakeDamage_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Entry
                    Heal = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Entry(
                        "Heal",
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.MethodSetProperties._Heal_Stub,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.MethodSetProperties._Heal_CanInvoke,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.MethodSetProperties._Heal_InvokeMethod);
                private static void _Heal_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EncounterDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EncounterDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._HealMethod, sf);
                }
                private static global::System.Exception _Heal_CanInvoke(global::LightSwitchApplication.EncounterDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Heal_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Heal_InvokeMethod(global::LightSwitchApplication.EncounterDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Heal_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Entry
                    OkMethod = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Entry(
                        "OkMethod",
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.MethodSetProperties._OkMethod_Stub,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.MethodSetProperties._OkMethod_CanInvoke,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.MethodSetProperties._OkMethod_InvokeMethod);
                private static void _OkMethod_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EncounterDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EncounterDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._OkMethodMethod, sf);
                }
                private static global::System.Exception _OkMethod_CanInvoke(global::LightSwitchApplication.EncounterDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OkMethod_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OkMethod_InvokeMethod(global::LightSwitchApplication.EncounterDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OkMethod_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Entry
                    CancelMethod = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Entry(
                        "CancelMethod",
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.MethodSetProperties._CancelMethod_Stub,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.MethodSetProperties._CancelMethod_CanInvoke,
                        global::LightSwitchApplication.EncounterDetail.DetailsClass.MethodSetProperties._CancelMethod_InvokeMethod);
                private static void _CancelMethod_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EncounterDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EncounterDetail, global::LightSwitchApplication.EncounterDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EncounterDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelMethodMethod, sf);
                }
                private static global::System.Exception _CancelMethod_CanInvoke(global::LightSwitchApplication.EncounterDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelMethod_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelMethod_InvokeMethod(global::LightSwitchApplication.EncounterDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelMethod_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EditablePowersGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EditablePowersGrid, global::LightSwitchApplication.EditablePowersGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EditablePowersGrid() : base("LightSwitchApplication:EditablePowersGrid")
        {
            global::LightSwitchApplication.EditablePowersGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EditablePowersGrid CreateInstance()
        {
            return new global::LightSwitchApplication.EditablePowersGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditablePowersGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditablePowersGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditablePowersGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditablePowersGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditablePowersGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditablePowersGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditablePowersGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Powers_SelectionChanged();

        partial void Powers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Powers_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Powers visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Power> Powers
        {
            get
            {
                return global::LightSwitchApplication.EditablePowersGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EditablePowersGrid.DetailsClass.PropertySetProperties.Powers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Powers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditablePowersGrid, global::LightSwitchApplication.EditablePowersGrid.DetailsClass, global::LightSwitchApplication.EditablePowersGrid.DetailsClass.PropertySet, global::LightSwitchApplication.EditablePowersGrid.DetailsClass.CommandSet, global::LightSwitchApplication.EditablePowersGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EditablePowersGrid.DetailsClass.PropertySetProperties.Powers;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditablePowersGrid, global::LightSwitchApplication.EditablePowersGrid.DetailsClass>.Entry
                __EditablePowersGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditablePowersGrid, global::LightSwitchApplication.EditablePowersGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.EditablePowersGrid.DetailsClass.__EditablePowersGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EditablePowersGrid.DetailsClass.__EditablePowersGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.EditablePowersGrid.DetailsClass.__EditablePowersGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.EditablePowersGrid.DetailsClass.__EditablePowersGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.EditablePowersGrid.DetailsClass.__EditablePowersGrid_InvokeCreated,
                    global::LightSwitchApplication.EditablePowersGrid.DetailsClass.__EditablePowersGrid_InvokeActivated,
                    global::LightSwitchApplication.EditablePowersGrid.DetailsClass.__EditablePowersGrid_InvokeSaveErrorEvent);
            private static void __EditablePowersGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EditablePowersGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EditablePowersGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EditablePowersGrid_InvokeSavingEvent(global::LightSwitchApplication.EditablePowersGrid s)
            {
                bool handled = false;
                s.EditablePowersGrid_Saving(ref handled);
                return handled;
            }
            private static void __EditablePowersGrid_InvokeSavedEvent(global::LightSwitchApplication.EditablePowersGrid s)
            {
                s.EditablePowersGrid_Saved();
            }
            private static bool __EditablePowersGrid_InvokeClosingEvent(global::LightSwitchApplication.EditablePowersGrid s)
            {
                bool cancel = false;
                s.EditablePowersGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __EditablePowersGrid_InvokeCreated(global::LightSwitchApplication.EditablePowersGrid s)
            {
                s.EditablePowersGrid_Created();
            }
            private static void __EditablePowersGrid_InvokeActivated(global::LightSwitchApplication.EditablePowersGrid s)
            {
                s.EditablePowersGrid_Activated();
            }
            private static bool __EditablePowersGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.EditablePowersGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.EditablePowersGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EditablePowersGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EditablePowersGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EditablePowersGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable PowersQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.ApplicationData.Powers,
                    "Creature");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditablePowersGrid, global::LightSwitchApplication.EditablePowersGrid.DetailsClass, global::LightSwitchApplication.Power>.Data _Powers;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EditablePowersGrid, global::LightSwitchApplication.EditablePowersGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditablePowersGrid, global::LightSwitchApplication.EditablePowersGrid.DetailsClass, global::LightSwitchApplication.Power> Powers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditablePowersGrid, global::LightSwitchApplication.EditablePowersGrid.DetailsClass, global::LightSwitchApplication.Power>)base.GetItem(global::LightSwitchApplication.EditablePowersGrid.DetailsClass.PropertySetProperties.Powers);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EditablePowersGrid, global::LightSwitchApplication.EditablePowersGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EditablePowersGrid, global::LightSwitchApplication.EditablePowersGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditablePowersGrid, global::LightSwitchApplication.EditablePowersGrid.DetailsClass, global::LightSwitchApplication.Power>.Entry
                    Powers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditablePowersGrid, global::LightSwitchApplication.EditablePowersGrid.DetailsClass, global::LightSwitchApplication.Power>.Entry(
                        "Powers",
                        global::LightSwitchApplication.EditablePowersGrid.DetailsClass.PropertySetProperties._Powers_Stub,
                        global::LightSwitchApplication.EditablePowersGrid.DetailsClass.PropertySetProperties._Powers_Validate,
                        global::LightSwitchApplication.EditablePowersGrid.DetailsClass.PropertySetProperties._Powers_CreateQuery,
                        global::LightSwitchApplication.EditablePowersGrid.DetailsClass.PropertySetProperties._Powers_SelectionChanged,
                        global::LightSwitchApplication.EditablePowersGrid.DetailsClass.PropertySetProperties._Powers_OnCollectionChanged,
                        global::LightSwitchApplication.EditablePowersGrid.DetailsClass.PropertySetProperties._Powers_OnLoaded);
                private static void _Powers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditablePowersGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditablePowersGrid, global::LightSwitchApplication.EditablePowersGrid.DetailsClass, global::LightSwitchApplication.Power>.Data> c, global::LightSwitchApplication.EditablePowersGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._Powers, sf);
                }
                private static void _Powers_Validate(global::LightSwitchApplication.EditablePowersGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Powers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Powers_CreateQuery(global::LightSwitchApplication.EditablePowersGrid.DetailsClass d, object[] args)
                {
                    return d.PowersQuery();
                }
                private static void _Powers_SelectionChanged(global::LightSwitchApplication.EditablePowersGrid s)
                {
                    s.Powers_SelectionChanged();
                }
                private static void _Powers_OnCollectionChanged(global::LightSwitchApplication.EditablePowersGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Powers_Changed(e);
                }
                private static void _Powers_OnLoaded(global::LightSwitchApplication.EditablePowersGrid s, bool succeeded)
                {
                    s.Powers_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EditableStatusesGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EditableStatusesGrid, global::LightSwitchApplication.EditableStatusesGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EditableStatusesGrid() : base("LightSwitchApplication:EditableStatusesGrid")
        {
            global::LightSwitchApplication.EditableStatusesGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EditableStatusesGrid CreateInstance()
        {
            return new global::LightSwitchApplication.EditableStatusesGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableStatusesGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableStatusesGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableStatusesGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableStatusesGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableStatusesGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableStatusesGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableStatusesGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Statuses_SelectionChanged();

        partial void Statuses_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statuses_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Statuses visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Status> Statuses
        {
            get
            {
                return global::LightSwitchApplication.EditableStatusesGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EditableStatusesGrid.DetailsClass.PropertySetProperties.Statuses);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statuses_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableStatusesGrid, global::LightSwitchApplication.EditableStatusesGrid.DetailsClass, global::LightSwitchApplication.EditableStatusesGrid.DetailsClass.PropertySet, global::LightSwitchApplication.EditableStatusesGrid.DetailsClass.CommandSet, global::LightSwitchApplication.EditableStatusesGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EditableStatusesGrid.DetailsClass.PropertySetProperties.Statuses;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableStatusesGrid, global::LightSwitchApplication.EditableStatusesGrid.DetailsClass>.Entry
                __EditableStatusesGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableStatusesGrid, global::LightSwitchApplication.EditableStatusesGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.EditableStatusesGrid.DetailsClass.__EditableStatusesGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EditableStatusesGrid.DetailsClass.__EditableStatusesGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.EditableStatusesGrid.DetailsClass.__EditableStatusesGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.EditableStatusesGrid.DetailsClass.__EditableStatusesGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.EditableStatusesGrid.DetailsClass.__EditableStatusesGrid_InvokeCreated,
                    global::LightSwitchApplication.EditableStatusesGrid.DetailsClass.__EditableStatusesGrid_InvokeActivated,
                    global::LightSwitchApplication.EditableStatusesGrid.DetailsClass.__EditableStatusesGrid_InvokeSaveErrorEvent);
            private static void __EditableStatusesGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EditableStatusesGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EditableStatusesGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EditableStatusesGrid_InvokeSavingEvent(global::LightSwitchApplication.EditableStatusesGrid s)
            {
                bool handled = false;
                s.EditableStatusesGrid_Saving(ref handled);
                return handled;
            }
            private static void __EditableStatusesGrid_InvokeSavedEvent(global::LightSwitchApplication.EditableStatusesGrid s)
            {
                s.EditableStatusesGrid_Saved();
            }
            private static bool __EditableStatusesGrid_InvokeClosingEvent(global::LightSwitchApplication.EditableStatusesGrid s)
            {
                bool cancel = false;
                s.EditableStatusesGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __EditableStatusesGrid_InvokeCreated(global::LightSwitchApplication.EditableStatusesGrid s)
            {
                s.EditableStatusesGrid_Created();
            }
            private static void __EditableStatusesGrid_InvokeActivated(global::LightSwitchApplication.EditableStatusesGrid s)
            {
                s.EditableStatusesGrid_Activated();
            }
            private static bool __EditableStatusesGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.EditableStatusesGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.EditableStatusesGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EditableStatusesGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EditableStatusesGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EditableStatusesGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable StatusesQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.ApplicationData.Statuses,
                    "Creature");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableStatusesGrid, global::LightSwitchApplication.EditableStatusesGrid.DetailsClass, global::LightSwitchApplication.Status>.Data _Statuses;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EditableStatusesGrid, global::LightSwitchApplication.EditableStatusesGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableStatusesGrid, global::LightSwitchApplication.EditableStatusesGrid.DetailsClass, global::LightSwitchApplication.Status> Statuses
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableStatusesGrid, global::LightSwitchApplication.EditableStatusesGrid.DetailsClass, global::LightSwitchApplication.Status>)base.GetItem(global::LightSwitchApplication.EditableStatusesGrid.DetailsClass.PropertySetProperties.Statuses);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EditableStatusesGrid, global::LightSwitchApplication.EditableStatusesGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EditableStatusesGrid, global::LightSwitchApplication.EditableStatusesGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableStatusesGrid, global::LightSwitchApplication.EditableStatusesGrid.DetailsClass, global::LightSwitchApplication.Status>.Entry
                    Statuses = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableStatusesGrid, global::LightSwitchApplication.EditableStatusesGrid.DetailsClass, global::LightSwitchApplication.Status>.Entry(
                        "Statuses",
                        global::LightSwitchApplication.EditableStatusesGrid.DetailsClass.PropertySetProperties._Statuses_Stub,
                        global::LightSwitchApplication.EditableStatusesGrid.DetailsClass.PropertySetProperties._Statuses_Validate,
                        global::LightSwitchApplication.EditableStatusesGrid.DetailsClass.PropertySetProperties._Statuses_CreateQuery,
                        global::LightSwitchApplication.EditableStatusesGrid.DetailsClass.PropertySetProperties._Statuses_SelectionChanged,
                        global::LightSwitchApplication.EditableStatusesGrid.DetailsClass.PropertySetProperties._Statuses_OnCollectionChanged,
                        global::LightSwitchApplication.EditableStatusesGrid.DetailsClass.PropertySetProperties._Statuses_OnLoaded);
                private static void _Statuses_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableStatusesGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableStatusesGrid, global::LightSwitchApplication.EditableStatusesGrid.DetailsClass, global::LightSwitchApplication.Status>.Data> c, global::LightSwitchApplication.EditableStatusesGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._Statuses, sf);
                }
                private static void _Statuses_Validate(global::LightSwitchApplication.EditableStatusesGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Statuses_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Statuses_CreateQuery(global::LightSwitchApplication.EditableStatusesGrid.DetailsClass d, object[] args)
                {
                    return d.StatusesQuery();
                }
                private static void _Statuses_SelectionChanged(global::LightSwitchApplication.EditableStatusesGrid s)
                {
                    s.Statuses_SelectionChanged();
                }
                private static void _Statuses_OnCollectionChanged(global::LightSwitchApplication.EditableStatusesGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Statuses_Changed(e);
                }
                private static void _Statuses_OnLoaded(global::LightSwitchApplication.EditableStatusesGrid s, bool succeeded)
                {
                    s.Statuses_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EditableCreaturesGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EditableCreaturesGrid, global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EditableCreaturesGrid() : base("LightSwitchApplication:EditableCreaturesGrid")
        {
            global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EditableCreaturesGrid CreateInstance()
        {
            return new global::LightSwitchApplication.EditableCreaturesGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableCreaturesGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableCreaturesGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableCreaturesGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableCreaturesGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableCreaturesGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableCreaturesGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableCreaturesGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Creatures_SelectionChanged();

        partial void Creatures_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Creatures_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Creatures visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Creature> Creatures
        {
            get
            {
                return global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass.PropertySetProperties.Creatures);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Creatures_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableCreaturesGrid, global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass, global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass.PropertySet, global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass.CommandSet, global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass.PropertySetProperties.Creatures;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableCreaturesGrid, global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass>.Entry
                __EditableCreaturesGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableCreaturesGrid, global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass.__EditableCreaturesGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass.__EditableCreaturesGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass.__EditableCreaturesGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass.__EditableCreaturesGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass.__EditableCreaturesGrid_InvokeCreated,
                    global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass.__EditableCreaturesGrid_InvokeActivated,
                    global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass.__EditableCreaturesGrid_InvokeSaveErrorEvent);
            private static void __EditableCreaturesGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EditableCreaturesGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EditableCreaturesGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EditableCreaturesGrid_InvokeSavingEvent(global::LightSwitchApplication.EditableCreaturesGrid s)
            {
                bool handled = false;
                s.EditableCreaturesGrid_Saving(ref handled);
                return handled;
            }
            private static void __EditableCreaturesGrid_InvokeSavedEvent(global::LightSwitchApplication.EditableCreaturesGrid s)
            {
                s.EditableCreaturesGrid_Saved();
            }
            private static bool __EditableCreaturesGrid_InvokeClosingEvent(global::LightSwitchApplication.EditableCreaturesGrid s)
            {
                bool cancel = false;
                s.EditableCreaturesGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __EditableCreaturesGrid_InvokeCreated(global::LightSwitchApplication.EditableCreaturesGrid s)
            {
                s.EditableCreaturesGrid_Created();
            }
            private static void __EditableCreaturesGrid_InvokeActivated(global::LightSwitchApplication.EditableCreaturesGrid s)
            {
                s.EditableCreaturesGrid_Activated();
            }
            private static bool __EditableCreaturesGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.EditableCreaturesGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.EditableCreaturesGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable CreaturesQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.ApplicationData.Creatures,
                    "Encounter");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableCreaturesGrid, global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass, global::LightSwitchApplication.Creature>.Data _Creatures;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EditableCreaturesGrid, global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableCreaturesGrid, global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass, global::LightSwitchApplication.Creature> Creatures
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableCreaturesGrid, global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass, global::LightSwitchApplication.Creature>)base.GetItem(global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass.PropertySetProperties.Creatures);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EditableCreaturesGrid, global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EditableCreaturesGrid, global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableCreaturesGrid, global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass, global::LightSwitchApplication.Creature>.Entry
                    Creatures = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableCreaturesGrid, global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass, global::LightSwitchApplication.Creature>.Entry(
                        "Creatures",
                        global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass.PropertySetProperties._Creatures_Stub,
                        global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass.PropertySetProperties._Creatures_Validate,
                        global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass.PropertySetProperties._Creatures_CreateQuery,
                        global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass.PropertySetProperties._Creatures_SelectionChanged,
                        global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass.PropertySetProperties._Creatures_OnCollectionChanged,
                        global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass.PropertySetProperties._Creatures_OnLoaded);
                private static void _Creatures_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableCreaturesGrid, global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass, global::LightSwitchApplication.Creature>.Data> c, global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._Creatures, sf);
                }
                private static void _Creatures_Validate(global::LightSwitchApplication.EditableCreaturesGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Creatures_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Creatures_CreateQuery(global::LightSwitchApplication.EditableCreaturesGrid.DetailsClass d, object[] args)
                {
                    return d.CreaturesQuery();
                }
                private static void _Creatures_SelectionChanged(global::LightSwitchApplication.EditableCreaturesGrid s)
                {
                    s.Creatures_SelectionChanged();
                }
                private static void _Creatures_OnCollectionChanged(global::LightSwitchApplication.EditableCreaturesGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Creatures_Changed(e);
                }
                private static void _Creatures_OnLoaded(global::LightSwitchApplication.EditableCreaturesGrid s, bool succeeded)
                {
                    s.Creatures_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EditableEncountersGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EditableEncountersGrid, global::LightSwitchApplication.EditableEncountersGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EditableEncountersGrid() : base("LightSwitchApplication:EditableEncountersGrid")
        {
            global::LightSwitchApplication.EditableEncountersGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EditableEncountersGrid CreateInstance()
        {
            return new global::LightSwitchApplication.EditableEncountersGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableEncountersGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableEncountersGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableEncountersGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableEncountersGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableEncountersGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableEncountersGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableEncountersGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Encounters_SelectionChanged();

        partial void Encounters_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounters_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Encounters visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Encounter> Encounters
        {
            get
            {
                return global::LightSwitchApplication.EditableEncountersGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EditableEncountersGrid.DetailsClass.PropertySetProperties.Encounters);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounters_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableEncountersGrid, global::LightSwitchApplication.EditableEncountersGrid.DetailsClass, global::LightSwitchApplication.EditableEncountersGrid.DetailsClass.PropertySet, global::LightSwitchApplication.EditableEncountersGrid.DetailsClass.CommandSet, global::LightSwitchApplication.EditableEncountersGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EditableEncountersGrid.DetailsClass.PropertySetProperties.Encounters;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableEncountersGrid, global::LightSwitchApplication.EditableEncountersGrid.DetailsClass>.Entry
                __EditableEncountersGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableEncountersGrid, global::LightSwitchApplication.EditableEncountersGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.EditableEncountersGrid.DetailsClass.__EditableEncountersGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EditableEncountersGrid.DetailsClass.__EditableEncountersGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.EditableEncountersGrid.DetailsClass.__EditableEncountersGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.EditableEncountersGrid.DetailsClass.__EditableEncountersGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.EditableEncountersGrid.DetailsClass.__EditableEncountersGrid_InvokeCreated,
                    global::LightSwitchApplication.EditableEncountersGrid.DetailsClass.__EditableEncountersGrid_InvokeActivated,
                    global::LightSwitchApplication.EditableEncountersGrid.DetailsClass.__EditableEncountersGrid_InvokeSaveErrorEvent);
            private static void __EditableEncountersGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EditableEncountersGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EditableEncountersGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EditableEncountersGrid_InvokeSavingEvent(global::LightSwitchApplication.EditableEncountersGrid s)
            {
                bool handled = false;
                s.EditableEncountersGrid_Saving(ref handled);
                return handled;
            }
            private static void __EditableEncountersGrid_InvokeSavedEvent(global::LightSwitchApplication.EditableEncountersGrid s)
            {
                s.EditableEncountersGrid_Saved();
            }
            private static bool __EditableEncountersGrid_InvokeClosingEvent(global::LightSwitchApplication.EditableEncountersGrid s)
            {
                bool cancel = false;
                s.EditableEncountersGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __EditableEncountersGrid_InvokeCreated(global::LightSwitchApplication.EditableEncountersGrid s)
            {
                s.EditableEncountersGrid_Created();
            }
            private static void __EditableEncountersGrid_InvokeActivated(global::LightSwitchApplication.EditableEncountersGrid s)
            {
                s.EditableEncountersGrid_Activated();
            }
            private static bool __EditableEncountersGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.EditableEncountersGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.EditableEncountersGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EditableEncountersGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EditableEncountersGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EditableEncountersGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EncountersQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.Encounters;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableEncountersGrid, global::LightSwitchApplication.EditableEncountersGrid.DetailsClass, global::LightSwitchApplication.Encounter>.Data _Encounters;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EditableEncountersGrid, global::LightSwitchApplication.EditableEncountersGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableEncountersGrid, global::LightSwitchApplication.EditableEncountersGrid.DetailsClass, global::LightSwitchApplication.Encounter> Encounters
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableEncountersGrid, global::LightSwitchApplication.EditableEncountersGrid.DetailsClass, global::LightSwitchApplication.Encounter>)base.GetItem(global::LightSwitchApplication.EditableEncountersGrid.DetailsClass.PropertySetProperties.Encounters);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EditableEncountersGrid, global::LightSwitchApplication.EditableEncountersGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EditableEncountersGrid, global::LightSwitchApplication.EditableEncountersGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableEncountersGrid, global::LightSwitchApplication.EditableEncountersGrid.DetailsClass, global::LightSwitchApplication.Encounter>.Entry
                    Encounters = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableEncountersGrid, global::LightSwitchApplication.EditableEncountersGrid.DetailsClass, global::LightSwitchApplication.Encounter>.Entry(
                        "Encounters",
                        global::LightSwitchApplication.EditableEncountersGrid.DetailsClass.PropertySetProperties._Encounters_Stub,
                        global::LightSwitchApplication.EditableEncountersGrid.DetailsClass.PropertySetProperties._Encounters_Validate,
                        global::LightSwitchApplication.EditableEncountersGrid.DetailsClass.PropertySetProperties._Encounters_CreateQuery,
                        global::LightSwitchApplication.EditableEncountersGrid.DetailsClass.PropertySetProperties._Encounters_SelectionChanged,
                        global::LightSwitchApplication.EditableEncountersGrid.DetailsClass.PropertySetProperties._Encounters_OnCollectionChanged,
                        global::LightSwitchApplication.EditableEncountersGrid.DetailsClass.PropertySetProperties._Encounters_OnLoaded);
                private static void _Encounters_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableEncountersGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableEncountersGrid, global::LightSwitchApplication.EditableEncountersGrid.DetailsClass, global::LightSwitchApplication.Encounter>.Data> c, global::LightSwitchApplication.EditableEncountersGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._Encounters, sf);
                }
                private static void _Encounters_Validate(global::LightSwitchApplication.EditableEncountersGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Encounters_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Encounters_CreateQuery(global::LightSwitchApplication.EditableEncountersGrid.DetailsClass d, object[] args)
                {
                    return d.EncountersQuery();
                }
                private static void _Encounters_SelectionChanged(global::LightSwitchApplication.EditableEncountersGrid s)
                {
                    s.Encounters_SelectionChanged();
                }
                private static void _Encounters_OnCollectionChanged(global::LightSwitchApplication.EditableEncountersGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Encounters_Changed(e);
                }
                private static void _Encounters_OnLoaded(global::LightSwitchApplication.EditableEncountersGrid s, bool succeeded)
                {
                    s.Encounters_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
}
