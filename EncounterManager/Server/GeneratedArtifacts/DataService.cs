//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Creatures_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Creatures_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Creatures_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Creatures_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Creatures_Inserting(global::LightSwitchApplication.Creature entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Creatures_Inserted(global::LightSwitchApplication.Creature entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Creatures_Updating(global::LightSwitchApplication.Creature entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Creatures_Updated(global::LightSwitchApplication.Creature entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Creatures_Deleting(global::LightSwitchApplication.Creature entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Creatures_Deleted(global::LightSwitchApplication.Creature entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Creatures_Validate(global::LightSwitchApplication.Creature entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Creatures_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Creature, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Powers_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Powers_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Powers_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Powers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Powers_Inserting(global::LightSwitchApplication.Power entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Powers_Inserted(global::LightSwitchApplication.Power entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Powers_Updating(global::LightSwitchApplication.Power entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Powers_Updated(global::LightSwitchApplication.Power entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Powers_Deleting(global::LightSwitchApplication.Power entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Powers_Deleted(global::LightSwitchApplication.Power entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Powers_Validate(global::LightSwitchApplication.Power entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Powers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Power, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statuses_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statuses_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statuses_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statuses_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statuses_Inserting(global::LightSwitchApplication.Status entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statuses_Inserted(global::LightSwitchApplication.Status entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statuses_Updating(global::LightSwitchApplication.Status entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statuses_Updated(global::LightSwitchApplication.Status entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statuses_Deleting(global::LightSwitchApplication.Status entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statuses_Deleted(global::LightSwitchApplication.Status entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statuses_Validate(global::LightSwitchApplication.Status entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statuses_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Status, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounters_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounters_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounters_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounters_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounters_Inserting(global::LightSwitchApplication.Encounter entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounters_Inserted(global::LightSwitchApplication.Encounter entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounters_Updating(global::LightSwitchApplication.Encounter entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounters_Updated(global::LightSwitchApplication.Encounter entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounters_Deleting(global::LightSwitchApplication.Encounter entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounters_Deleted(global::LightSwitchApplication.Encounter entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounters_Validate(global::LightSwitchApplication.Encounter entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounters_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Encounter, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Creature>
                __CreaturesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Creature>(
                    "Creatures",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Creatures_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Creatures_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Creatures_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Creatures_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Creatures_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Creatures_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Creatures_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Creatures_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Creatures_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Creatures_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Creatures_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Creatures_Filter);
            private static bool __Creatures_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Creatures_CanInsert(ref result);
                return result;
            }
            private static bool __Creatures_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Creatures_CanUpdate(ref result);
                return result;
            }
            private static bool __Creatures_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Creatures_CanDelete(ref result);
                return result;
            }
            private static bool __Creatures_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Creatures_CanRead(ref result);
                return result;
            }
            private static void __Creatures_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Creature e)
            {
                d.Creatures_Inserting(e);
            }
            private static void __Creatures_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Creature e)
            {
                d.Creatures_Inserted(e);
            }
            private static void __Creatures_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Creature e)
            {
                d.Creatures_Updating(e);
            }
            private static void __Creatures_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Creature e)
            {
                d.Creatures_Updated(e);
            }
            private static void __Creatures_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Creature e)
            {
                d.Creatures_Deleting(e);
            }
            private static void __Creatures_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Creature e)
            {
                d.Creatures_Deleted(e);
            }
            private static void __Creatures_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Creature e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Creatures_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Creature, bool>> __Creatures_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Creature, bool>> filter = null;
                d.Creatures_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Power>
                __PowersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Power>(
                    "Powers",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Powers_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Powers_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Powers_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Powers_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Powers_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Powers_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Powers_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Powers_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Powers_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Powers_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Powers_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Powers_Filter);
            private static bool __Powers_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Powers_CanInsert(ref result);
                return result;
            }
            private static bool __Powers_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Powers_CanUpdate(ref result);
                return result;
            }
            private static bool __Powers_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Powers_CanDelete(ref result);
                return result;
            }
            private static bool __Powers_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Powers_CanRead(ref result);
                return result;
            }
            private static void __Powers_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Power e)
            {
                d.Powers_Inserting(e);
            }
            private static void __Powers_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Power e)
            {
                d.Powers_Inserted(e);
            }
            private static void __Powers_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Power e)
            {
                d.Powers_Updating(e);
            }
            private static void __Powers_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Power e)
            {
                d.Powers_Updated(e);
            }
            private static void __Powers_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Power e)
            {
                d.Powers_Deleting(e);
            }
            private static void __Powers_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Power e)
            {
                d.Powers_Deleted(e);
            }
            private static void __Powers_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Power e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Powers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Power, bool>> __Powers_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Power, bool>> filter = null;
                d.Powers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Status>
                __StatusesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Status>(
                    "Statuses",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Statuses_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Statuses_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Statuses_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Statuses_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Statuses_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Statuses_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Statuses_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Statuses_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Statuses_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Statuses_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Statuses_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Statuses_Filter);
            private static bool __Statuses_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Statuses_CanInsert(ref result);
                return result;
            }
            private static bool __Statuses_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Statuses_CanUpdate(ref result);
                return result;
            }
            private static bool __Statuses_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Statuses_CanDelete(ref result);
                return result;
            }
            private static bool __Statuses_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Statuses_CanRead(ref result);
                return result;
            }
            private static void __Statuses_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Status e)
            {
                d.Statuses_Inserting(e);
            }
            private static void __Statuses_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Status e)
            {
                d.Statuses_Inserted(e);
            }
            private static void __Statuses_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Status e)
            {
                d.Statuses_Updating(e);
            }
            private static void __Statuses_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Status e)
            {
                d.Statuses_Updated(e);
            }
            private static void __Statuses_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Status e)
            {
                d.Statuses_Deleting(e);
            }
            private static void __Statuses_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Status e)
            {
                d.Statuses_Deleted(e);
            }
            private static void __Statuses_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Status e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Statuses_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Status, bool>> __Statuses_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Status, bool>> filter = null;
                d.Statuses_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Encounter>
                __EncountersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Encounter>(
                    "Encounters",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Encounters_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Encounters_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Encounters_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Encounters_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Encounters_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Encounters_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Encounters_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Encounters_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Encounters_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Encounters_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Encounters_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Encounters_Filter);
            private static bool __Encounters_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Encounters_CanInsert(ref result);
                return result;
            }
            private static bool __Encounters_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Encounters_CanUpdate(ref result);
                return result;
            }
            private static bool __Encounters_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Encounters_CanDelete(ref result);
                return result;
            }
            private static bool __Encounters_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Encounters_CanRead(ref result);
                return result;
            }
            private static void __Encounters_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Encounter e)
            {
                d.Encounters_Inserting(e);
            }
            private static void __Encounters_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Encounter e)
            {
                d.Encounters_Inserted(e);
            }
            private static void __Encounters_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Encounter e)
            {
                d.Encounters_Updating(e);
            }
            private static void __Encounters_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Encounter e)
            {
                d.Encounters_Updated(e);
            }
            private static void __Encounters_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Encounter e)
            {
                d.Encounters_Deleting(e);
            }
            private static void __Encounters_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Encounter e)
            {
                d.Encounters_Deleted(e);
            }
            private static void __Encounters_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Encounter e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Encounters_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Encounter, bool>> __Encounters_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Encounter, bool>> filter = null;
                d.Encounters_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
