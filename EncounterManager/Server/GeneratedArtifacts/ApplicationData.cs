//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LightSwitchApplication", "Power_Creature", "Creature", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ApplicationData.Implementation.Creature), "Power", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ApplicationData.Implementation.Power), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "Status_Creature", "Creature", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ApplicationData.Implementation.Creature), "Status", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ApplicationData.Implementation.Status), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "Encounter_Creature", "Encounter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ApplicationData.Implementation.Encounter), "Creature", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ApplicationData.Implementation.Creature), true)]

#endregion

namespace ApplicationData.Implementation
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ApplicationDataObjectContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ApplicationDataObjectContext object using the connection string found in the 'ApplicationDataObjectContext' section of the application configuration file.
        /// </summary>
        public ApplicationDataObjectContext() : base("name=ApplicationDataObjectContext", "ApplicationDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ApplicationDataObjectContext object.
        /// </summary>
        public ApplicationDataObjectContext(string connectionString) : base(connectionString, "ApplicationDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ApplicationDataObjectContext object.
        /// </summary>
        public ApplicationDataObjectContext(EntityConnection connection) : base(connection, "ApplicationDataObjectContext")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Creature> Creatures
        {
            get
            {
                if ((_Creatures == null))
                {
                    _Creatures = base.CreateObjectSet<Creature>("Creatures");
                }
                return _Creatures;
            }
        }
        private ObjectSet<Creature> _Creatures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Power> Powers
        {
            get
            {
                if ((_Powers == null))
                {
                    _Powers = base.CreateObjectSet<Power>("Powers");
                }
                return _Powers;
            }
        }
        private ObjectSet<Power> _Powers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Status> Statuses
        {
            get
            {
                if ((_Statuses == null))
                {
                    _Statuses = base.CreateObjectSet<Status>("Statuses");
                }
                return _Statuses;
            }
        }
        private ObjectSet<Status> _Statuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Encounter> Encounters
        {
            get
            {
                if ((_Encounters == null))
                {
                    _Encounters = base.CreateObjectSet<Encounter>("Encounters");
                }
                return _Encounters;
            }
        }
        private ObjectSet<Encounter> _Encounters;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Creatures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCreatures(Creature creature)
        {
            base.AddObject("Creatures", creature);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Powers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPowers(Power power)
        {
            base.AddObject("Powers", power);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Statuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatuses(Status status)
        {
            base.AddObject("Statuses", status);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Encounters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEncounters(Encounter encounter)
        {
            base.AddObject("Encounters", encounter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Creature")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Creature : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Creature object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="initiative">Initial value of the Initiative property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="index">Initial value of the Index property.</param>
        /// <param name="currentHP">Initial value of the CurrentHP property.</param>
        /// <param name="tempHP">Initial value of the TempHP property.</param>
        /// <param name="maxHP">Initial value of the MaxHP property.</param>
        /// <param name="armorClass">Initial value of the ArmorClass property.</param>
        /// <param name="reflex">Initial value of the Reflex property.</param>
        /// <param name="fortitude">Initial value of the Fortitude property.</param>
        /// <param name="will">Initial value of the Will property.</param>
        /// <param name="speed">Initial value of the Speed property.</param>
        /// <param name="encounter_Creature">Initial value of the Encounter_Creature property.</param>
        public static Creature CreateCreature(global::System.Int32 id, global::System.Int32 initiative, global::System.String name, global::System.Int32 index, global::System.Int32 currentHP, global::System.Int32 tempHP, global::System.Int32 maxHP, global::System.String armorClass, global::System.String reflex, global::System.String fortitude, global::System.String will, global::System.Int32 speed, global::System.Int32 encounter_Creature)
        {
            Creature creature = new Creature();
            creature.Id = id;
            creature.Initiative = initiative;
            creature.Name = name;
            creature.Index = index;
            creature.CurrentHP = currentHP;
            creature.TempHP = tempHP;
            creature.MaxHP = maxHP;
            creature.ArmorClass = armorClass;
            creature.Reflex = reflex;
            creature.Fortitude = fortitude;
            creature.Will = will;
            creature.Speed = speed;
            creature.Encounter_Creature = encounter_Creature;
            return creature;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Initiative
        {
            get
            {
                return _Initiative;
            }
            set
            {
                OnInitiativeChanging(value);
                ReportPropertyChanging("Initiative");
                _Initiative = value;
                ReportPropertyChanged("Initiative");
                OnInitiativeChanged();
            }
        }
        private global::System.Int32 _Initiative;
        partial void OnInitiativeChanging(global::System.Int32 value);
        partial void OnInitiativeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Index
        {
            get
            {
                return _Index;
            }
            set
            {
                OnIndexChanging(value);
                ReportPropertyChanging("Index");
                _Index = value;
                ReportPropertyChanged("Index");
                OnIndexChanged();
            }
        }
        private global::System.Int32 _Index;
        partial void OnIndexChanging(global::System.Int32 value);
        partial void OnIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrentHP
        {
            get
            {
                return _CurrentHP;
            }
            set
            {
                OnCurrentHPChanging(value);
                ReportPropertyChanging("CurrentHP");
                _CurrentHP = value;
                ReportPropertyChanged("CurrentHP");
                OnCurrentHPChanged();
            }
        }
        private global::System.Int32 _CurrentHP;
        partial void OnCurrentHPChanging(global::System.Int32 value);
        partial void OnCurrentHPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TempHP
        {
            get
            {
                return _TempHP;
            }
            set
            {
                OnTempHPChanging(value);
                ReportPropertyChanging("TempHP");
                _TempHP = value;
                ReportPropertyChanged("TempHP");
                OnTempHPChanged();
            }
        }
        private global::System.Int32 _TempHP;
        partial void OnTempHPChanging(global::System.Int32 value);
        partial void OnTempHPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxHP
        {
            get
            {
                return _MaxHP;
            }
            set
            {
                OnMaxHPChanging(value);
                ReportPropertyChanging("MaxHP");
                _MaxHP = value;
                ReportPropertyChanged("MaxHP");
                OnMaxHPChanged();
            }
        }
        private global::System.Int32 _MaxHP;
        partial void OnMaxHPChanging(global::System.Int32 value);
        partial void OnMaxHPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> XP
        {
            get
            {
                return _XP;
            }
            set
            {
                OnXPChanging(value);
                ReportPropertyChanging("XP");
                _XP = value;
                ReportPropertyChanged("XP");
                OnXPChanged();
            }
        }
        private Nullable<global::System.Int32> _XP;
        partial void OnXPChanging(Nullable<global::System.Int32> value);
        partial void OnXPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ArmorClass
        {
            get
            {
                return _ArmorClass;
            }
            set
            {
                OnArmorClassChanging(value);
                ReportPropertyChanging("ArmorClass");
                _ArmorClass = value;
                ReportPropertyChanged("ArmorClass");
                OnArmorClassChanged();
            }
        }
        private global::System.String _ArmorClass;
        partial void OnArmorClassChanging(global::System.String value);
        partial void OnArmorClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Reflex
        {
            get
            {
                return _Reflex;
            }
            set
            {
                OnReflexChanging(value);
                ReportPropertyChanging("Reflex");
                _Reflex = value;
                ReportPropertyChanged("Reflex");
                OnReflexChanged();
            }
        }
        private global::System.String _Reflex;
        partial void OnReflexChanging(global::System.String value);
        partial void OnReflexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Fortitude
        {
            get
            {
                return _Fortitude;
            }
            set
            {
                OnFortitudeChanging(value);
                ReportPropertyChanging("Fortitude");
                _Fortitude = value;
                ReportPropertyChanged("Fortitude");
                OnFortitudeChanged();
            }
        }
        private global::System.String _Fortitude;
        partial void OnFortitudeChanging(global::System.String value);
        partial void OnFortitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Will
        {
            get
            {
                return _Will;
            }
            set
            {
                OnWillChanging(value);
                ReportPropertyChanging("Will");
                _Will = value;
                ReportPropertyChanged("Will");
                OnWillChanged();
            }
        }
        private global::System.String _Will;
        partial void OnWillChanging(global::System.String value);
        partial void OnWillChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Speed
        {
            get
            {
                return _Speed;
            }
            set
            {
                OnSpeedChanging(value);
                ReportPropertyChanging("Speed");
                _Speed = value;
                ReportPropertyChanged("Speed");
                OnSpeedChanged();
            }
        }
        private global::System.Int32 _Speed;
        partial void OnSpeedChanging(global::System.Int32 value);
        partial void OnSpeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = value;
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Encounter_Creature
        {
            get
            {
                return _Encounter_Creature;
            }
            set
            {
                OnEncounter_CreatureChanging(value);
                ReportPropertyChanging("Encounter_Creature");
                _Encounter_Creature = value;
                ReportPropertyChanged("Encounter_Creature");
                OnEncounter_CreatureChanged();
            }
        }
        private global::System.Int32 _Encounter_Creature;
        partial void OnEncounter_CreatureChanging(global::System.Int32 value);
        partial void OnEncounter_CreatureChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Power_Creature", "Power")]
        public EntityCollection<Power> Powers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Power>("LightSwitchApplication.Power_Creature", "Power");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Power>("LightSwitchApplication.Power_Creature", "Power", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Status_Creature", "Status")]
        public EntityCollection<Status> Statuses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Status>("LightSwitchApplication.Status_Creature", "Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Status>("LightSwitchApplication.Status_Creature", "Status", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Encounter_Creature", "Encounter")]
        public Encounter Encounter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Encounter>("LightSwitchApplication.Encounter_Creature", "Encounter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Encounter>("LightSwitchApplication.Encounter_Creature", "Encounter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Encounter> EncounterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Encounter>("LightSwitchApplication.Encounter_Creature", "Encounter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Encounter>("LightSwitchApplication.Encounter_Creature", "Encounter", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Encounter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Encounter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Encounter object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Encounter CreateEncounter(global::System.Int32 id, global::System.String name)
        {
            Encounter encounter = new Encounter();
            encounter.Id = id;
            encounter.Name = name;
            return encounter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Encounter_Creature", "Creature")]
        public EntityCollection<Creature> Creatures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Creature>("LightSwitchApplication.Encounter_Creature", "Creature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Creature>("LightSwitchApplication.Encounter_Creature", "Creature", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Power")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Power : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Power object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="kind">Initial value of the Kind property.</param>
        /// <param name="exhausted">Initial value of the Exhausted property.</param>
        /// <param name="power_Creature">Initial value of the Power_Creature property.</param>
        public static Power CreatePower(global::System.Int32 id, global::System.String name, global::System.Int32 kind, global::System.Boolean exhausted, global::System.Int32 power_Creature)
        {
            Power power = new Power();
            power.Id = id;
            power.Name = name;
            power.Kind = kind;
            power.Exhausted = exhausted;
            power.Power_Creature = power_Creature;
            return power;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Kind
        {
            get
            {
                return _Kind;
            }
            set
            {
                OnKindChanging(value);
                ReportPropertyChanging("Kind");
                _Kind = value;
                ReportPropertyChanged("Kind");
                OnKindChanged();
            }
        }
        private global::System.Int32 _Kind;
        partial void OnKindChanging(global::System.Int32 value);
        partial void OnKindChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Recharge
        {
            get
            {
                return _Recharge;
            }
            set
            {
                OnRechargeChanging(value);
                ReportPropertyChanging("Recharge");
                _Recharge = value;
                ReportPropertyChanged("Recharge");
                OnRechargeChanged();
            }
        }
        private Nullable<global::System.Int32> _Recharge;
        partial void OnRechargeChanging(Nullable<global::System.Int32> value);
        partial void OnRechargeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Exhausted
        {
            get
            {
                return _Exhausted;
            }
            set
            {
                OnExhaustedChanging(value);
                ReportPropertyChanging("Exhausted");
                _Exhausted = value;
                ReportPropertyChanged("Exhausted");
                OnExhaustedChanged();
            }
        }
        private global::System.Boolean _Exhausted;
        partial void OnExhaustedChanging(global::System.Boolean value);
        partial void OnExhaustedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Attack
        {
            get
            {
                return _Attack;
            }
            set
            {
                OnAttackChanging(value);
                ReportPropertyChanging("Attack");
                _Attack = value;
                ReportPropertyChanged("Attack");
                OnAttackChanged();
            }
        }
        private global::System.String _Attack;
        partial void OnAttackChanging(global::System.String value);
        partial void OnAttackChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Hit
        {
            get
            {
                return _Hit;
            }
            set
            {
                OnHitChanging(value);
                ReportPropertyChanging("Hit");
                _Hit = value;
                ReportPropertyChanged("Hit");
                OnHitChanged();
            }
        }
        private global::System.String _Hit;
        partial void OnHitChanging(global::System.String value);
        partial void OnHitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Miss
        {
            get
            {
                return _Miss;
            }
            set
            {
                OnMissChanging(value);
                ReportPropertyChanging("Miss");
                _Miss = value;
                ReportPropertyChanged("Miss");
                OnMissChanged();
            }
        }
        private global::System.String _Miss;
        partial void OnMissChanging(global::System.String value);
        partial void OnMissChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Effect
        {
            get
            {
                return _Effect;
            }
            set
            {
                OnEffectChanging(value);
                ReportPropertyChanging("Effect");
                _Effect = value;
                ReportPropertyChanged("Effect");
                OnEffectChanged();
            }
        }
        private global::System.String _Effect;
        partial void OnEffectChanging(global::System.String value);
        partial void OnEffectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Range
        {
            get
            {
                return _Range;
            }
            set
            {
                OnRangeChanging(value);
                ReportPropertyChanging("Range");
                _Range = value;
                ReportPropertyChanged("Range");
                OnRangeChanged();
            }
        }
        private global::System.String _Range;
        partial void OnRangeChanging(global::System.String value);
        partial void OnRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Trigger
        {
            get
            {
                return _Trigger;
            }
            set
            {
                OnTriggerChanging(value);
                ReportPropertyChanging("Trigger");
                _Trigger = value;
                ReportPropertyChanged("Trigger");
                OnTriggerChanged();
            }
        }
        private global::System.String _Trigger;
        partial void OnTriggerChanging(global::System.String value);
        partial void OnTriggerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Power_Creature
        {
            get
            {
                return _Power_Creature;
            }
            set
            {
                OnPower_CreatureChanging(value);
                ReportPropertyChanging("Power_Creature");
                _Power_Creature = value;
                ReportPropertyChanged("Power_Creature");
                OnPower_CreatureChanged();
            }
        }
        private global::System.Int32 _Power_Creature;
        partial void OnPower_CreatureChanging(global::System.Int32 value);
        partial void OnPower_CreatureChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Power_Creature", "Creature")]
        public Creature Creature
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Creature>("LightSwitchApplication.Power_Creature", "Creature").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Creature>("LightSwitchApplication.Power_Creature", "Creature").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Creature> CreatureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Creature>("LightSwitchApplication.Power_Creature", "Creature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Creature>("LightSwitchApplication.Power_Creature", "Creature", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Status")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Status : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Status object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="effect">Initial value of the Effect property.</param>
        /// <param name="status_Creature">Initial value of the Status_Creature property.</param>
        public static Status CreateStatus(global::System.Int32 id, global::System.String effect, global::System.Int32 status_Creature)
        {
            Status status = new Status();
            status.Id = id;
            status.Effect = effect;
            status.Status_Creature = status_Creature;
            return status;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Effect
        {
            get
            {
                return _Effect;
            }
            set
            {
                OnEffectChanging(value);
                ReportPropertyChanging("Effect");
                _Effect = value;
                ReportPropertyChanged("Effect");
                OnEffectChanged();
            }
        }
        private global::System.String _Effect;
        partial void OnEffectChanging(global::System.String value);
        partial void OnEffectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status_Creature
        {
            get
            {
                return _Status_Creature;
            }
            set
            {
                OnStatus_CreatureChanging(value);
                ReportPropertyChanging("Status_Creature");
                _Status_Creature = value;
                ReportPropertyChanged("Status_Creature");
                OnStatus_CreatureChanged();
            }
        }
        private global::System.Int32 _Status_Creature;
        partial void OnStatus_CreatureChanging(global::System.Int32 value);
        partial void OnStatus_CreatureChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Status_Creature", "Creature")]
        public Creature Creature
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Creature>("LightSwitchApplication.Status_Creature", "Creature").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Creature>("LightSwitchApplication.Status_Creature", "Creature").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Creature> CreatureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Creature>("LightSwitchApplication.Status_Creature", "Creature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Creature>("LightSwitchApplication.Status_Creature", "Creature", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
