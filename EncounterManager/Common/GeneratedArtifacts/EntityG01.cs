

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Creature : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Creature entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Creature()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Creature(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Creature> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Creature.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Creature_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Creature_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Creature.DetailsClass.GetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Creature.DetailsClass.SetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Initiative
        {
            get
            {
                return global::LightSwitchApplication.Creature.DetailsClass.GetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Initiative);
            }
            set
            {
                global::LightSwitchApplication.Creature.DetailsClass.SetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Initiative, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Initiative_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Initiative_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Initiative_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.Creature.DetailsClass.GetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.Creature.DetailsClass.SetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Index
        {
            get
            {
                return global::LightSwitchApplication.Creature.DetailsClass.GetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Index);
            }
            set
            {
                global::LightSwitchApplication.Creature.DetailsClass.SetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Index, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Index_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Index_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Index_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int CurrentHP
        {
            get
            {
                return global::LightSwitchApplication.Creature.DetailsClass.GetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.CurrentHP);
            }
            set
            {
                global::LightSwitchApplication.Creature.DetailsClass.SetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.CurrentHP, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CurrentHP_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CurrentHP_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CurrentHP_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int TempHP
        {
            get
            {
                return global::LightSwitchApplication.Creature.DetailsClass.GetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.TempHP);
            }
            set
            {
                global::LightSwitchApplication.Creature.DetailsClass.SetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.TempHP, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TempHP_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TempHP_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TempHP_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int MaxHP
        {
            get
            {
                return global::LightSwitchApplication.Creature.DetailsClass.GetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.MaxHP);
            }
            set
            {
                global::LightSwitchApplication.Creature.DetailsClass.SetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.MaxHP, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaxHP_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaxHP_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaxHP_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string StatusSummary
        {
            get
            {
                return global::LightSwitchApplication.Creature.DetailsClass.GetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.StatusSummary);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusSummary_Compute(ref string result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusSummary_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> XP
        {
            get
            {
                return global::LightSwitchApplication.Creature.DetailsClass.GetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.XP);
            }
            set
            {
                global::LightSwitchApplication.Creature.DetailsClass.SetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.XP, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XP_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XP_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XP_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ArmorClass
        {
            get
            {
                return global::LightSwitchApplication.Creature.DetailsClass.GetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.ArmorClass);
            }
            set
            {
                global::LightSwitchApplication.Creature.DetailsClass.SetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.ArmorClass, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ArmorClass_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ArmorClass_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ArmorClass_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Reflex
        {
            get
            {
                return global::LightSwitchApplication.Creature.DetailsClass.GetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Reflex);
            }
            set
            {
                global::LightSwitchApplication.Creature.DetailsClass.SetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Reflex, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Reflex_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Reflex_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Reflex_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Fortitude
        {
            get
            {
                return global::LightSwitchApplication.Creature.DetailsClass.GetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Fortitude);
            }
            set
            {
                global::LightSwitchApplication.Creature.DetailsClass.SetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Fortitude, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fortitude_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fortitude_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fortitude_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Will
        {
            get
            {
                return global::LightSwitchApplication.Creature.DetailsClass.GetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Will);
            }
            set
            {
                global::LightSwitchApplication.Creature.DetailsClass.SetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Will, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Will_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Will_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Will_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int BloodiedHP
        {
            get
            {
                return global::LightSwitchApplication.Creature.DetailsClass.GetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.BloodiedHP);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BloodiedHP_Compute(ref int result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BloodiedHP_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsBloodied
        {
            get
            {
                return global::LightSwitchApplication.Creature.DetailsClass.GetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.IsBloodied);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsBloodied_Compute(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsBloodied_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Speed
        {
            get
            {
                return global::LightSwitchApplication.Creature.DetailsClass.GetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Speed);
            }
            set
            {
                global::LightSwitchApplication.Creature.DetailsClass.SetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Speed, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Speed_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Speed_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Speed_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FullName
        {
            get
            {
                return global::LightSwitchApplication.Creature.DetailsClass.GetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.FullName);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FullName_Compute(ref string result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FullName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Notes
        {
            get
            {
                return global::LightSwitchApplication.Creature.DetailsClass.GetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Notes);
            }
            set
            {
                global::LightSwitchApplication.Creature.DetailsClass.SetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Notes, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Power> Powers
        {
            get
            {
                return global::LightSwitchApplication.Creature.DetailsClass.GetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Powers);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Power> PowersQuery
        {
            get
            {
                return global::LightSwitchApplication.Creature.DetailsClass.GetQuery(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Powers);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Status> Statuses
        {
            get
            {
                return global::LightSwitchApplication.Creature.DetailsClass.GetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Statuses);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Status> StatusesQuery
        {
            get
            {
                return global::LightSwitchApplication.Creature.DetailsClass.GetQuery(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Statuses);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Encounter Encounter
        {
            get
            {
                return global::LightSwitchApplication.Creature.DetailsClass.GetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Encounter);
            }
            set
            {
                global::LightSwitchApplication.Creature.DetailsClass.SetValue(this, global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Encounter, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounter_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounter_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Encounter_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Creature,
                global::LightSwitchApplication.Creature.DetailsClass,
                global::LightSwitchApplication.Creature.DetailsClass.IImplementation,
                global::LightSwitchApplication.Creature.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass>.Entry
                __CreatureEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass>.Entry(
                    global::LightSwitchApplication.Creature.DetailsClass.__Creature_CreateNew,
                    global::LightSwitchApplication.Creature.DetailsClass.__Creature_Created,
                    global::LightSwitchApplication.Creature.DetailsClass.__Creature_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Creature __Creature_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Creature> es)
            {
                return new global::LightSwitchApplication.Creature(es);
            }
            private static void __Creature_Created(global::LightSwitchApplication.Creature e)
            {
                e.Creature_Created();
            }
            private static bool __Creature_AllowSaveWithErrors(global::LightSwitchApplication.Creature e)
            {
                bool result = false;
                e.Creature_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Creature.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int> Initiative
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Initiative) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int> Index
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Index) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int> CurrentHP
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.CurrentHP) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int> TempHP
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.TempHP) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int> MaxHP
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.MaxHP) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string> StatusSummary
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.StatusSummary) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, global::System.Nullable<int>> XP
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.XP) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string> ArmorClass
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.ArmorClass) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string> Reflex
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Reflex) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string> Fortitude
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Fortitude) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string> Will
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Will) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int> BloodiedHP
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.BloodiedHP) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, bool> IsBloodied
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.IsBloodied) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int> Speed
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Speed) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string> FullName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.FullName) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string> Notes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Notes) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, global::LightSwitchApplication.Power> Powers
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Powers) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, global::LightSwitchApplication.Power>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, global::LightSwitchApplication.Status> Statuses
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Statuses) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, global::LightSwitchApplication.Status>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, global::LightSwitchApplication.Encounter> Encounter
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Encounter) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, global::LightSwitchApplication.Encounter>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new int Initiative { get; set; }
                new string Name { get; set; }
                new int Index { get; set; }
                new int CurrentHP { get; set; }
                new int TempHP { get; set; }
                new int MaxHP { get; set; }
                new global::System.Nullable<int> XP { get; set; }
                new string ArmorClass { get; set; }
                new string Reflex { get; set; }
                new string Fortitude { get; set; }
                new string Will { get; set; }
                new int Speed { get; set; }
                new string Notes { get; set; }
                new global::System.Collections.IEnumerable Powers { get; }
                new global::System.Collections.IEnumerable Statuses { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Encounter { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Creature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Data> c, global::LightSwitchApplication.Creature.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Creature e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Creature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Creature e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Entry
                    Initiative = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Entry(
                        "Initiative",
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Initiative_Stub,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Initiative_ComputeIsReadOnly,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Initiative_Validate,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Initiative_GetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Initiative_SetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Initiative_OnValueChanged);
                private static void _Initiative_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Creature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Data> c, global::LightSwitchApplication.Creature.DetailsClass d, object sf)
                {
                    c(d, ref d._Initiative, sf);
                }
                private static bool _Initiative_ComputeIsReadOnly(global::LightSwitchApplication.Creature e)
                {
                    bool result = false;
                    e.Initiative_IsReadOnly(ref result);
                    return result;
                }
                private static void _Initiative_Validate(global::LightSwitchApplication.Creature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Initiative_Validate(r);
                }
                private static int _Initiative_GetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d)
                {
                    return d.ImplementationEntity.Initiative;
                }
                private static void _Initiative_SetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Initiative = v;
                }
                private static void _Initiative_OnValueChanged(global::LightSwitchApplication.Creature e)
                {
                    e.Initiative_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Creature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Data> c, global::LightSwitchApplication.Creature.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.Creature e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.Creature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.Creature e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Entry
                    Index = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Entry(
                        "Index",
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Index_Stub,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Index_ComputeIsReadOnly,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Index_Validate,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Index_GetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Index_SetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Index_OnValueChanged);
                private static void _Index_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Creature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Data> c, global::LightSwitchApplication.Creature.DetailsClass d, object sf)
                {
                    c(d, ref d._Index, sf);
                }
                private static bool _Index_ComputeIsReadOnly(global::LightSwitchApplication.Creature e)
                {
                    bool result = false;
                    e.Index_IsReadOnly(ref result);
                    return result;
                }
                private static void _Index_Validate(global::LightSwitchApplication.Creature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Index_Validate(r);
                }
                private static int _Index_GetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d)
                {
                    return d.ImplementationEntity.Index;
                }
                private static void _Index_SetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Index = v;
                }
                private static void _Index_OnValueChanged(global::LightSwitchApplication.Creature e)
                {
                    e.Index_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Entry
                    CurrentHP = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Entry(
                        "CurrentHP",
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._CurrentHP_Stub,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._CurrentHP_ComputeIsReadOnly,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._CurrentHP_Validate,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._CurrentHP_GetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._CurrentHP_SetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._CurrentHP_OnValueChanged);
                private static void _CurrentHP_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Creature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Data> c, global::LightSwitchApplication.Creature.DetailsClass d, object sf)
                {
                    c(d, ref d._CurrentHP, sf);
                }
                private static bool _CurrentHP_ComputeIsReadOnly(global::LightSwitchApplication.Creature e)
                {
                    bool result = false;
                    e.CurrentHP_IsReadOnly(ref result);
                    return result;
                }
                private static void _CurrentHP_Validate(global::LightSwitchApplication.Creature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CurrentHP_Validate(r);
                }
                private static int _CurrentHP_GetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d)
                {
                    return d.ImplementationEntity.CurrentHP;
                }
                private static void _CurrentHP_SetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d, int v)
                {
                    d.ImplementationEntity.CurrentHP = v;
                }
                private static void _CurrentHP_OnValueChanged(global::LightSwitchApplication.Creature e)
                {
                    e.CurrentHP_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Entry
                    TempHP = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Entry(
                        "TempHP",
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._TempHP_Stub,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._TempHP_ComputeIsReadOnly,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._TempHP_Validate,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._TempHP_GetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._TempHP_SetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._TempHP_OnValueChanged);
                private static void _TempHP_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Creature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Data> c, global::LightSwitchApplication.Creature.DetailsClass d, object sf)
                {
                    c(d, ref d._TempHP, sf);
                }
                private static bool _TempHP_ComputeIsReadOnly(global::LightSwitchApplication.Creature e)
                {
                    bool result = false;
                    e.TempHP_IsReadOnly(ref result);
                    return result;
                }
                private static void _TempHP_Validate(global::LightSwitchApplication.Creature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TempHP_Validate(r);
                }
                private static int _TempHP_GetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d)
                {
                    return d.ImplementationEntity.TempHP;
                }
                private static void _TempHP_SetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d, int v)
                {
                    d.ImplementationEntity.TempHP = v;
                }
                private static void _TempHP_OnValueChanged(global::LightSwitchApplication.Creature e)
                {
                    e.TempHP_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Entry
                    MaxHP = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Entry(
                        "MaxHP",
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._MaxHP_Stub,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._MaxHP_ComputeIsReadOnly,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._MaxHP_Validate,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._MaxHP_GetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._MaxHP_SetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._MaxHP_OnValueChanged);
                private static void _MaxHP_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Creature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Data> c, global::LightSwitchApplication.Creature.DetailsClass d, object sf)
                {
                    c(d, ref d._MaxHP, sf);
                }
                private static bool _MaxHP_ComputeIsReadOnly(global::LightSwitchApplication.Creature e)
                {
                    bool result = false;
                    e.MaxHP_IsReadOnly(ref result);
                    return result;
                }
                private static void _MaxHP_Validate(global::LightSwitchApplication.Creature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MaxHP_Validate(r);
                }
                private static int _MaxHP_GetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d)
                {
                    return d.ImplementationEntity.MaxHP;
                }
                private static void _MaxHP_SetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d, int v)
                {
                    d.ImplementationEntity.MaxHP = v;
                }
                private static void _MaxHP_OnValueChanged(global::LightSwitchApplication.Creature e)
                {
                    e.MaxHP_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Entry
                    StatusSummary = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Entry(
                        "StatusSummary",
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._StatusSummary_Stub,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._StatusSummary_Validate,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._StatusSummary_ComputeValue);
                private static void _StatusSummary_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Creature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Data> c, global::LightSwitchApplication.Creature.DetailsClass d, object sf)
                {
                    c(d, ref d._StatusSummary, sf);
                }
                private static void _StatusSummary_Validate(global::LightSwitchApplication.Creature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StatusSummary_Validate(r);
                }
                private static string _StatusSummary_ComputeValue(global::LightSwitchApplication.Creature e)
                {
                    string value = default(string);
                    e.StatusSummary_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, global::System.Nullable<int>>.Entry
                    XP = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, global::System.Nullable<int>>.Entry(
                        "XP",
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._XP_Stub,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._XP_ComputeIsReadOnly,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._XP_Validate,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._XP_GetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._XP_SetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._XP_OnValueChanged);
                private static void _XP_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Creature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Creature.DetailsClass d, object sf)
                {
                    c(d, ref d._XP, sf);
                }
                private static bool _XP_ComputeIsReadOnly(global::LightSwitchApplication.Creature e)
                {
                    bool result = false;
                    e.XP_IsReadOnly(ref result);
                    return result;
                }
                private static void _XP_Validate(global::LightSwitchApplication.Creature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.XP_Validate(r);
                }
                private static global::System.Nullable<int> _XP_GetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d)
                {
                    return d.ImplementationEntity.XP;
                }
                private static void _XP_SetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.XP = v;
                }
                private static void _XP_OnValueChanged(global::LightSwitchApplication.Creature e)
                {
                    e.XP_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Entry
                    ArmorClass = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Entry(
                        "ArmorClass",
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._ArmorClass_Stub,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._ArmorClass_ComputeIsReadOnly,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._ArmorClass_Validate,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._ArmorClass_GetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._ArmorClass_SetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._ArmorClass_OnValueChanged);
                private static void _ArmorClass_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Creature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Data> c, global::LightSwitchApplication.Creature.DetailsClass d, object sf)
                {
                    c(d, ref d._ArmorClass, sf);
                }
                private static bool _ArmorClass_ComputeIsReadOnly(global::LightSwitchApplication.Creature e)
                {
                    bool result = false;
                    e.ArmorClass_IsReadOnly(ref result);
                    return result;
                }
                private static void _ArmorClass_Validate(global::LightSwitchApplication.Creature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ArmorClass_Validate(r);
                }
                private static string _ArmorClass_GetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d)
                {
                    return d.ImplementationEntity.ArmorClass;
                }
                private static void _ArmorClass_SetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ArmorClass = v;
                }
                private static void _ArmorClass_OnValueChanged(global::LightSwitchApplication.Creature e)
                {
                    e.ArmorClass_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Entry
                    Reflex = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Entry(
                        "Reflex",
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Reflex_Stub,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Reflex_ComputeIsReadOnly,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Reflex_Validate,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Reflex_GetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Reflex_SetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Reflex_OnValueChanged);
                private static void _Reflex_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Creature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Data> c, global::LightSwitchApplication.Creature.DetailsClass d, object sf)
                {
                    c(d, ref d._Reflex, sf);
                }
                private static bool _Reflex_ComputeIsReadOnly(global::LightSwitchApplication.Creature e)
                {
                    bool result = false;
                    e.Reflex_IsReadOnly(ref result);
                    return result;
                }
                private static void _Reflex_Validate(global::LightSwitchApplication.Creature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Reflex_Validate(r);
                }
                private static string _Reflex_GetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d)
                {
                    return d.ImplementationEntity.Reflex;
                }
                private static void _Reflex_SetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Reflex = v;
                }
                private static void _Reflex_OnValueChanged(global::LightSwitchApplication.Creature e)
                {
                    e.Reflex_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Entry
                    Fortitude = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Entry(
                        "Fortitude",
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Fortitude_Stub,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Fortitude_ComputeIsReadOnly,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Fortitude_Validate,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Fortitude_GetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Fortitude_SetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Fortitude_OnValueChanged);
                private static void _Fortitude_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Creature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Data> c, global::LightSwitchApplication.Creature.DetailsClass d, object sf)
                {
                    c(d, ref d._Fortitude, sf);
                }
                private static bool _Fortitude_ComputeIsReadOnly(global::LightSwitchApplication.Creature e)
                {
                    bool result = false;
                    e.Fortitude_IsReadOnly(ref result);
                    return result;
                }
                private static void _Fortitude_Validate(global::LightSwitchApplication.Creature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Fortitude_Validate(r);
                }
                private static string _Fortitude_GetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d)
                {
                    return d.ImplementationEntity.Fortitude;
                }
                private static void _Fortitude_SetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Fortitude = v;
                }
                private static void _Fortitude_OnValueChanged(global::LightSwitchApplication.Creature e)
                {
                    e.Fortitude_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Entry
                    Will = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Entry(
                        "Will",
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Will_Stub,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Will_ComputeIsReadOnly,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Will_Validate,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Will_GetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Will_SetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Will_OnValueChanged);
                private static void _Will_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Creature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Data> c, global::LightSwitchApplication.Creature.DetailsClass d, object sf)
                {
                    c(d, ref d._Will, sf);
                }
                private static bool _Will_ComputeIsReadOnly(global::LightSwitchApplication.Creature e)
                {
                    bool result = false;
                    e.Will_IsReadOnly(ref result);
                    return result;
                }
                private static void _Will_Validate(global::LightSwitchApplication.Creature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Will_Validate(r);
                }
                private static string _Will_GetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d)
                {
                    return d.ImplementationEntity.Will;
                }
                private static void _Will_SetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Will = v;
                }
                private static void _Will_OnValueChanged(global::LightSwitchApplication.Creature e)
                {
                    e.Will_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Entry
                    BloodiedHP = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Entry(
                        "BloodiedHP",
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._BloodiedHP_Stub,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._BloodiedHP_Validate,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._BloodiedHP_ComputeValue);
                private static void _BloodiedHP_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Creature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Data> c, global::LightSwitchApplication.Creature.DetailsClass d, object sf)
                {
                    c(d, ref d._BloodiedHP, sf);
                }
                private static void _BloodiedHP_Validate(global::LightSwitchApplication.Creature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BloodiedHP_Validate(r);
                }
                private static int _BloodiedHP_ComputeValue(global::LightSwitchApplication.Creature e)
                {
                    int value = default(int);
                    e.BloodiedHP_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, bool>.Entry
                    IsBloodied = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, bool>.Entry(
                        "IsBloodied",
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._IsBloodied_Stub,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._IsBloodied_Validate,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._IsBloodied_ComputeValue);
                private static void _IsBloodied_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Creature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Creature.DetailsClass d, object sf)
                {
                    c(d, ref d._IsBloodied, sf);
                }
                private static void _IsBloodied_Validate(global::LightSwitchApplication.Creature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsBloodied_Validate(r);
                }
                private static bool _IsBloodied_ComputeValue(global::LightSwitchApplication.Creature e)
                {
                    bool value = default(bool);
                    e.IsBloodied_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Entry
                    Speed = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Entry(
                        "Speed",
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Speed_Stub,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Speed_ComputeIsReadOnly,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Speed_Validate,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Speed_GetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Speed_SetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Speed_OnValueChanged);
                private static void _Speed_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Creature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Data> c, global::LightSwitchApplication.Creature.DetailsClass d, object sf)
                {
                    c(d, ref d._Speed, sf);
                }
                private static bool _Speed_ComputeIsReadOnly(global::LightSwitchApplication.Creature e)
                {
                    bool result = false;
                    e.Speed_IsReadOnly(ref result);
                    return result;
                }
                private static void _Speed_Validate(global::LightSwitchApplication.Creature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Speed_Validate(r);
                }
                private static int _Speed_GetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d)
                {
                    return d.ImplementationEntity.Speed;
                }
                private static void _Speed_SetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Speed = v;
                }
                private static void _Speed_OnValueChanged(global::LightSwitchApplication.Creature e)
                {
                    e.Speed_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Entry
                    FullName = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Entry(
                        "FullName",
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._FullName_Stub,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._FullName_Validate,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._FullName_ComputeValue);
                private static void _FullName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Creature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Data> c, global::LightSwitchApplication.Creature.DetailsClass d, object sf)
                {
                    c(d, ref d._FullName, sf);
                }
                private static void _FullName_Validate(global::LightSwitchApplication.Creature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.FullName_Validate(r);
                }
                private static string _FullName_ComputeValue(global::LightSwitchApplication.Creature e)
                {
                    string value = default(string);
                    e.FullName_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Entry
                    Notes = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Entry(
                        "Notes",
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Notes_Stub,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Notes_ComputeIsReadOnly,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Notes_Validate,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Notes_GetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Notes_SetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Notes_OnValueChanged);
                private static void _Notes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Creature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Data> c, global::LightSwitchApplication.Creature.DetailsClass d, object sf)
                {
                    c(d, ref d._Notes, sf);
                }
                private static bool _Notes_ComputeIsReadOnly(global::LightSwitchApplication.Creature e)
                {
                    bool result = false;
                    e.Notes_IsReadOnly(ref result);
                    return result;
                }
                private static void _Notes_Validate(global::LightSwitchApplication.Creature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Notes_Validate(r);
                }
                private static string _Notes_GetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d)
                {
                    return d.ImplementationEntity.Notes;
                }
                private static void _Notes_SetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Notes = v;
                }
                private static void _Notes_OnValueChanged(global::LightSwitchApplication.Creature e)
                {
                    e.Notes_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, global::LightSwitchApplication.Power>.Entry
                    Powers = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, global::LightSwitchApplication.Power>.Entry(
                        "Powers",
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Powers_Stub,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Powers_GetReferencedEntities,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Powers_GetEntityCollection);
                private static void _Powers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Creature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, global::LightSwitchApplication.Power>.Data> c, global::LightSwitchApplication.Creature.DetailsClass d, object sf)
                {
                    c(d, ref d._Powers, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Power> _Powers_GetReferencedEntities(global::LightSwitchApplication.Creature.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass>(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Powers, ref d._Powers);
                }
                private static global::System.Collections.IEnumerable _Powers_GetEntityCollection(global::LightSwitchApplication.Creature.DetailsClass d)
                {
                    return d.ImplementationEntity.Powers;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, global::LightSwitchApplication.Status>.Entry
                    Statuses = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, global::LightSwitchApplication.Status>.Entry(
                        "Statuses",
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Statuses_Stub,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Statuses_GetReferencedEntities,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Statuses_GetEntityCollection);
                private static void _Statuses_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Creature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, global::LightSwitchApplication.Status>.Data> c, global::LightSwitchApplication.Creature.DetailsClass d, object sf)
                {
                    c(d, ref d._Statuses, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Status> _Statuses_GetReferencedEntities(global::LightSwitchApplication.Creature.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass>(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Statuses, ref d._Statuses);
                }
                private static global::System.Collections.IEnumerable _Statuses_GetEntityCollection(global::LightSwitchApplication.Creature.DetailsClass d)
                {
                    return d.ImplementationEntity.Statuses;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, global::LightSwitchApplication.Encounter>.Entry
                    Encounter = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, global::LightSwitchApplication.Encounter>.Entry(
                        "Encounter",
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Encounter_Stub,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Encounter_ComputeIsReadOnly,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Encounter_Validate,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Encounter_GetCoreImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Encounter_GetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Encounter_SetImplementationValue,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Encounter_Refresh,
                        global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties._Encounter_OnValueChanged);
                private static void _Encounter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Creature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, global::LightSwitchApplication.Encounter>.Data> c, global::LightSwitchApplication.Creature.DetailsClass d, object sf)
                {
                    c(d, ref d._Encounter, sf);
                }
                private static bool _Encounter_ComputeIsReadOnly(global::LightSwitchApplication.Creature e)
                {
                    bool result = false;
                    e.Encounter_IsReadOnly(ref result);
                    return result;
                }
                private static void _Encounter_Validate(global::LightSwitchApplication.Creature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Encounter_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Encounter_GetCoreImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d)
                {
                    return d.ImplementationEntity.Encounter;
                }
                private static global::LightSwitchApplication.Encounter _Encounter_GetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Encounter, global::LightSwitchApplication.Encounter.DetailsClass>(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Encounter, ref d._Encounter);
                }
                private static void _Encounter_SetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass d, global::LightSwitchApplication.Encounter v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Encounter, ref d._Encounter, (i, ev) => i.Encounter = ev, v);
                }
                private static void _Encounter_Refresh(global::LightSwitchApplication.Creature.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Creature.DetailsClass.PropertySetProperties.Encounter, ref d._Encounter);
                }
                private static void _Encounter_OnValueChanged(global::LightSwitchApplication.Creature e)
                {
                    e.Encounter_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Data _Initiative;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Data _Index;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Data _CurrentHP;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Data _TempHP;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Data _MaxHP;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Data _StatusSummary;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, global::System.Nullable<int>>.Data _XP;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Data _ArmorClass;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Data _Reflex;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Data _Fortitude;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Data _Will;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Data _BloodiedHP;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, bool>.Data _IsBloodied;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, int>.Data _Speed;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Data _FullName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, string>.Data _Notes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, global::LightSwitchApplication.Power>.Data _Powers;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, global::LightSwitchApplication.Status>.Data _Statuses;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass, global::LightSwitchApplication.Encounter>.Data _Encounter;
            
        }
    
        #endregion
    }
    
    #endregion
}
