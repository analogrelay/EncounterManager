

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Power : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Power entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Power()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Power(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Power> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Power.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Power_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Power_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Power.DetailsClass.GetValue(this, global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Power.DetailsClass.SetValue(this, global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.Power.DetailsClass.GetValue(this, global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.Power.DetailsClass.SetValue(this, global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Kind
        {
            get
            {
                return global::LightSwitchApplication.Power.DetailsClass.GetValue(this, global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Kind);
            }
            set
            {
                global::LightSwitchApplication.Power.DetailsClass.SetValue(this, global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Kind, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Kind_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Kind_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Kind_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Recharge
        {
            get
            {
                return global::LightSwitchApplication.Power.DetailsClass.GetValue(this, global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Recharge);
            }
            set
            {
                global::LightSwitchApplication.Power.DetailsClass.SetValue(this, global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Recharge, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Recharge_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Recharge_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Recharge_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool Exhausted
        {
            get
            {
                return global::LightSwitchApplication.Power.DetailsClass.GetValue(this, global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Exhausted);
            }
            set
            {
                global::LightSwitchApplication.Power.DetailsClass.SetValue(this, global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Exhausted, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Exhausted_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Exhausted_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Exhausted_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Attack
        {
            get
            {
                return global::LightSwitchApplication.Power.DetailsClass.GetValue(this, global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Attack);
            }
            set
            {
                global::LightSwitchApplication.Power.DetailsClass.SetValue(this, global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Attack, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attack_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attack_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attack_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Hit
        {
            get
            {
                return global::LightSwitchApplication.Power.DetailsClass.GetValue(this, global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Hit);
            }
            set
            {
                global::LightSwitchApplication.Power.DetailsClass.SetValue(this, global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Hit, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hit_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hit_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hit_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Miss
        {
            get
            {
                return global::LightSwitchApplication.Power.DetailsClass.GetValue(this, global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Miss);
            }
            set
            {
                global::LightSwitchApplication.Power.DetailsClass.SetValue(this, global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Miss, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Miss_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Miss_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Miss_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Effect
        {
            get
            {
                return global::LightSwitchApplication.Power.DetailsClass.GetValue(this, global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Effect);
            }
            set
            {
                global::LightSwitchApplication.Power.DetailsClass.SetValue(this, global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Effect, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Effect_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Effect_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Effect_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Range
        {
            get
            {
                return global::LightSwitchApplication.Power.DetailsClass.GetValue(this, global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Range);
            }
            set
            {
                global::LightSwitchApplication.Power.DetailsClass.SetValue(this, global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Range, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Range_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Range_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Range_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Trigger
        {
            get
            {
                return global::LightSwitchApplication.Power.DetailsClass.GetValue(this, global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Trigger);
            }
            set
            {
                global::LightSwitchApplication.Power.DetailsClass.SetValue(this, global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Trigger, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Trigger_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Trigger_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Trigger_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Creature Creature
        {
            get
            {
                return global::LightSwitchApplication.Power.DetailsClass.GetValue(this, global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Creature);
            }
            set
            {
                global::LightSwitchApplication.Power.DetailsClass.SetValue(this, global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Creature, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Creature_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Creature_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Creature_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Power,
                global::LightSwitchApplication.Power.DetailsClass,
                global::LightSwitchApplication.Power.DetailsClass.IImplementation,
                global::LightSwitchApplication.Power.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass>.Entry
                __PowerEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass>.Entry(
                    global::LightSwitchApplication.Power.DetailsClass.__Power_CreateNew,
                    global::LightSwitchApplication.Power.DetailsClass.__Power_Created,
                    global::LightSwitchApplication.Power.DetailsClass.__Power_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Power __Power_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Power> es)
            {
                return new global::LightSwitchApplication.Power(es);
            }
            private static void __Power_Created(global::LightSwitchApplication.Power e)
            {
                e.Power_Created();
            }
            private static bool __Power_AllowSaveWithErrors(global::LightSwitchApplication.Power e)
            {
                bool result = false;
                e.Power_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Power.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, int> Kind
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Kind) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, global::System.Nullable<int>> Recharge
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Recharge) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, bool> Exhausted
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Exhausted) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string> Attack
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Attack) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string> Hit
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Hit) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string> Miss
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Miss) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string> Effect
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Effect) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string> Range
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Range) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string> Trigger
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Trigger) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, global::LightSwitchApplication.Creature> Creature
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Creature) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, global::LightSwitchApplication.Creature>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new string Name { get; set; }
                new int Kind { get; set; }
                new global::System.Nullable<int> Recharge { get; set; }
                new bool Exhausted { get; set; }
                new string Attack { get; set; }
                new string Hit { get; set; }
                new string Miss { get; set; }
                new string Effect { get; set; }
                new string Range { get; set; }
                new string Trigger { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Creature { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Power.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, int>.Data> c, global::LightSwitchApplication.Power.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Power e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Power e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Power.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Power.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Power e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Power.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Data> c, global::LightSwitchApplication.Power.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.Power e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.Power e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.Power.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.Power.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.Power e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, int>.Entry
                    Kind = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, int>.Entry(
                        "Kind",
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Kind_Stub,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Kind_ComputeIsReadOnly,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Kind_Validate,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Kind_GetImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Kind_SetImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Kind_OnValueChanged);
                private static void _Kind_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Power.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, int>.Data> c, global::LightSwitchApplication.Power.DetailsClass d, object sf)
                {
                    c(d, ref d._Kind, sf);
                }
                private static bool _Kind_ComputeIsReadOnly(global::LightSwitchApplication.Power e)
                {
                    bool result = false;
                    e.Kind_IsReadOnly(ref result);
                    return result;
                }
                private static void _Kind_Validate(global::LightSwitchApplication.Power e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Kind_Validate(r);
                }
                private static int _Kind_GetImplementationValue(global::LightSwitchApplication.Power.DetailsClass d)
                {
                    return d.ImplementationEntity.Kind;
                }
                private static void _Kind_SetImplementationValue(global::LightSwitchApplication.Power.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Kind = v;
                }
                private static void _Kind_OnValueChanged(global::LightSwitchApplication.Power e)
                {
                    e.Kind_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, global::System.Nullable<int>>.Entry
                    Recharge = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Recharge",
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Recharge_Stub,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Recharge_ComputeIsReadOnly,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Recharge_Validate,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Recharge_GetImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Recharge_SetImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Recharge_OnValueChanged);
                private static void _Recharge_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Power.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Power.DetailsClass d, object sf)
                {
                    c(d, ref d._Recharge, sf);
                }
                private static bool _Recharge_ComputeIsReadOnly(global::LightSwitchApplication.Power e)
                {
                    bool result = false;
                    e.Recharge_IsReadOnly(ref result);
                    return result;
                }
                private static void _Recharge_Validate(global::LightSwitchApplication.Power e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Recharge_Validate(r);
                }
                private static global::System.Nullable<int> _Recharge_GetImplementationValue(global::LightSwitchApplication.Power.DetailsClass d)
                {
                    return d.ImplementationEntity.Recharge;
                }
                private static void _Recharge_SetImplementationValue(global::LightSwitchApplication.Power.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Recharge = v;
                }
                private static void _Recharge_OnValueChanged(global::LightSwitchApplication.Power e)
                {
                    e.Recharge_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, bool>.Entry
                    Exhausted = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, bool>.Entry(
                        "Exhausted",
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Exhausted_Stub,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Exhausted_ComputeIsReadOnly,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Exhausted_Validate,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Exhausted_GetImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Exhausted_SetImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Exhausted_OnValueChanged);
                private static void _Exhausted_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Power.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Power.DetailsClass d, object sf)
                {
                    c(d, ref d._Exhausted, sf);
                }
                private static bool _Exhausted_ComputeIsReadOnly(global::LightSwitchApplication.Power e)
                {
                    bool result = false;
                    e.Exhausted_IsReadOnly(ref result);
                    return result;
                }
                private static void _Exhausted_Validate(global::LightSwitchApplication.Power e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Exhausted_Validate(r);
                }
                private static bool _Exhausted_GetImplementationValue(global::LightSwitchApplication.Power.DetailsClass d)
                {
                    return d.ImplementationEntity.Exhausted;
                }
                private static void _Exhausted_SetImplementationValue(global::LightSwitchApplication.Power.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.Exhausted = v;
                }
                private static void _Exhausted_OnValueChanged(global::LightSwitchApplication.Power e)
                {
                    e.Exhausted_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Entry
                    Attack = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Entry(
                        "Attack",
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Attack_Stub,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Attack_ComputeIsReadOnly,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Attack_Validate,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Attack_GetImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Attack_SetImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Attack_OnValueChanged);
                private static void _Attack_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Power.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Data> c, global::LightSwitchApplication.Power.DetailsClass d, object sf)
                {
                    c(d, ref d._Attack, sf);
                }
                private static bool _Attack_ComputeIsReadOnly(global::LightSwitchApplication.Power e)
                {
                    bool result = false;
                    e.Attack_IsReadOnly(ref result);
                    return result;
                }
                private static void _Attack_Validate(global::LightSwitchApplication.Power e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Attack_Validate(r);
                }
                private static string _Attack_GetImplementationValue(global::LightSwitchApplication.Power.DetailsClass d)
                {
                    return d.ImplementationEntity.Attack;
                }
                private static void _Attack_SetImplementationValue(global::LightSwitchApplication.Power.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Attack = v;
                }
                private static void _Attack_OnValueChanged(global::LightSwitchApplication.Power e)
                {
                    e.Attack_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Entry
                    Hit = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Entry(
                        "Hit",
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Hit_Stub,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Hit_ComputeIsReadOnly,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Hit_Validate,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Hit_GetImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Hit_SetImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Hit_OnValueChanged);
                private static void _Hit_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Power.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Data> c, global::LightSwitchApplication.Power.DetailsClass d, object sf)
                {
                    c(d, ref d._Hit, sf);
                }
                private static bool _Hit_ComputeIsReadOnly(global::LightSwitchApplication.Power e)
                {
                    bool result = false;
                    e.Hit_IsReadOnly(ref result);
                    return result;
                }
                private static void _Hit_Validate(global::LightSwitchApplication.Power e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Hit_Validate(r);
                }
                private static string _Hit_GetImplementationValue(global::LightSwitchApplication.Power.DetailsClass d)
                {
                    return d.ImplementationEntity.Hit;
                }
                private static void _Hit_SetImplementationValue(global::LightSwitchApplication.Power.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Hit = v;
                }
                private static void _Hit_OnValueChanged(global::LightSwitchApplication.Power e)
                {
                    e.Hit_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Entry
                    Miss = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Entry(
                        "Miss",
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Miss_Stub,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Miss_ComputeIsReadOnly,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Miss_Validate,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Miss_GetImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Miss_SetImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Miss_OnValueChanged);
                private static void _Miss_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Power.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Data> c, global::LightSwitchApplication.Power.DetailsClass d, object sf)
                {
                    c(d, ref d._Miss, sf);
                }
                private static bool _Miss_ComputeIsReadOnly(global::LightSwitchApplication.Power e)
                {
                    bool result = false;
                    e.Miss_IsReadOnly(ref result);
                    return result;
                }
                private static void _Miss_Validate(global::LightSwitchApplication.Power e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Miss_Validate(r);
                }
                private static string _Miss_GetImplementationValue(global::LightSwitchApplication.Power.DetailsClass d)
                {
                    return d.ImplementationEntity.Miss;
                }
                private static void _Miss_SetImplementationValue(global::LightSwitchApplication.Power.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Miss = v;
                }
                private static void _Miss_OnValueChanged(global::LightSwitchApplication.Power e)
                {
                    e.Miss_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Entry
                    Effect = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Entry(
                        "Effect",
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Effect_Stub,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Effect_ComputeIsReadOnly,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Effect_Validate,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Effect_GetImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Effect_SetImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Effect_OnValueChanged);
                private static void _Effect_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Power.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Data> c, global::LightSwitchApplication.Power.DetailsClass d, object sf)
                {
                    c(d, ref d._Effect, sf);
                }
                private static bool _Effect_ComputeIsReadOnly(global::LightSwitchApplication.Power e)
                {
                    bool result = false;
                    e.Effect_IsReadOnly(ref result);
                    return result;
                }
                private static void _Effect_Validate(global::LightSwitchApplication.Power e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Effect_Validate(r);
                }
                private static string _Effect_GetImplementationValue(global::LightSwitchApplication.Power.DetailsClass d)
                {
                    return d.ImplementationEntity.Effect;
                }
                private static void _Effect_SetImplementationValue(global::LightSwitchApplication.Power.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Effect = v;
                }
                private static void _Effect_OnValueChanged(global::LightSwitchApplication.Power e)
                {
                    e.Effect_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Entry
                    Range = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Entry(
                        "Range",
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Range_Stub,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Range_ComputeIsReadOnly,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Range_Validate,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Range_GetImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Range_SetImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Range_OnValueChanged);
                private static void _Range_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Power.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Data> c, global::LightSwitchApplication.Power.DetailsClass d, object sf)
                {
                    c(d, ref d._Range, sf);
                }
                private static bool _Range_ComputeIsReadOnly(global::LightSwitchApplication.Power e)
                {
                    bool result = false;
                    e.Range_IsReadOnly(ref result);
                    return result;
                }
                private static void _Range_Validate(global::LightSwitchApplication.Power e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Range_Validate(r);
                }
                private static string _Range_GetImplementationValue(global::LightSwitchApplication.Power.DetailsClass d)
                {
                    return d.ImplementationEntity.Range;
                }
                private static void _Range_SetImplementationValue(global::LightSwitchApplication.Power.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Range = v;
                }
                private static void _Range_OnValueChanged(global::LightSwitchApplication.Power e)
                {
                    e.Range_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Entry
                    Trigger = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Entry(
                        "Trigger",
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Trigger_Stub,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Trigger_ComputeIsReadOnly,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Trigger_Validate,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Trigger_GetImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Trigger_SetImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Trigger_OnValueChanged);
                private static void _Trigger_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Power.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Data> c, global::LightSwitchApplication.Power.DetailsClass d, object sf)
                {
                    c(d, ref d._Trigger, sf);
                }
                private static bool _Trigger_ComputeIsReadOnly(global::LightSwitchApplication.Power e)
                {
                    bool result = false;
                    e.Trigger_IsReadOnly(ref result);
                    return result;
                }
                private static void _Trigger_Validate(global::LightSwitchApplication.Power e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Trigger_Validate(r);
                }
                private static string _Trigger_GetImplementationValue(global::LightSwitchApplication.Power.DetailsClass d)
                {
                    return d.ImplementationEntity.Trigger;
                }
                private static void _Trigger_SetImplementationValue(global::LightSwitchApplication.Power.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Trigger = v;
                }
                private static void _Trigger_OnValueChanged(global::LightSwitchApplication.Power e)
                {
                    e.Trigger_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, global::LightSwitchApplication.Creature>.Entry
                    Creature = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, global::LightSwitchApplication.Creature>.Entry(
                        "Creature",
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Creature_Stub,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Creature_ComputeIsReadOnly,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Creature_Validate,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Creature_GetCoreImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Creature_GetImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Creature_SetImplementationValue,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Creature_Refresh,
                        global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties._Creature_OnValueChanged);
                private static void _Creature_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Power.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, global::LightSwitchApplication.Creature>.Data> c, global::LightSwitchApplication.Power.DetailsClass d, object sf)
                {
                    c(d, ref d._Creature, sf);
                }
                private static bool _Creature_ComputeIsReadOnly(global::LightSwitchApplication.Power e)
                {
                    bool result = false;
                    e.Creature_IsReadOnly(ref result);
                    return result;
                }
                private static void _Creature_Validate(global::LightSwitchApplication.Power e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Creature_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Creature_GetCoreImplementationValue(global::LightSwitchApplication.Power.DetailsClass d)
                {
                    return d.ImplementationEntity.Creature;
                }
                private static global::LightSwitchApplication.Creature _Creature_GetImplementationValue(global::LightSwitchApplication.Power.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Creature, global::LightSwitchApplication.Creature.DetailsClass>(global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Creature, ref d._Creature);
                }
                private static void _Creature_SetImplementationValue(global::LightSwitchApplication.Power.DetailsClass d, global::LightSwitchApplication.Creature v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Creature, ref d._Creature, (i, ev) => i.Creature = ev, v);
                }
                private static void _Creature_Refresh(global::LightSwitchApplication.Power.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Power.DetailsClass.PropertySetProperties.Creature, ref d._Creature);
                }
                private static void _Creature_OnValueChanged(global::LightSwitchApplication.Power e)
                {
                    e.Creature_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, int>.Data _Kind;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, global::System.Nullable<int>>.Data _Recharge;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, bool>.Data _Exhausted;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Data _Attack;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Data _Hit;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Data _Miss;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Data _Effect;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Data _Range;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, string>.Data _Trigger;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Power, global::LightSwitchApplication.Power.DetailsClass, global::LightSwitchApplication.Creature>.Data _Creature;
            
        }
    
        #endregion
    }
    
    #endregion
}
